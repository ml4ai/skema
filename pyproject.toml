[project]
name = "skema"
authors = [
    {name="Keith Alcock", email="keith@lum.ai"},
    {name="Tito Ferra", email="tito@lum.ai"},
    {name="Clayton Morrison", email="clayton@lum.ai"},
    {name="Enrique Noriega", email="enoriega@arizona.edu"},
    {name = "Adarsh Pyarelal", email="adarsh@arizona.edu"},
    {name="Vincent Raymond", email="vincent@lum.ai"},
]
description = "Scientific Knowledge Extraction and Model Analysis"
version = "0.1.0"
dependencies=[
    "Cython",
    "dill==0.3.7",
    "networkx==3.1",
    "PyYAML",
    "tree-sitter",
    "requests",
    "beautifulsoup4", # used to remove comments etc from pMML before sending to MORAE
    "typing_extensions", # see https://github.com/pydantic/pydantic/issues/5821#issuecomment-1559196859
    "fastapi~=0.100.0",
    "pydantic~=2.0.0",
    "uvicorn",
    "python-multipart"
]
# The Python program analysis pipeline does not currently work with Python 3.9
# or 3.10. This may change in the future.
requires-python = "==3.8.*"
license = {text="MIT"}
dynamic = ["readme"]

[project.optional-dependencies]
# Dev dependencies.
# - pytest: for running tests
# - black: Autoformatting
# - pygraphviz: for creating function network visualizations for debugging.
#   Pygraphviz is often tricky to install, so we reserve it for the dev extras
#   list.
# - six: Required by auto-generated Swagger models
dev = ["pytest", "pytest-cov", "pytest-xdist", "httpx", "black", "mypy", "coverage", "pygraphviz", "six"]

demo = ["jupyter==1.0.0"]

# ISA dependencies.
isa = [
  "pydot", 
  "graphviz",
  "graspologic==3.2.0", # NOTE: this depends on rust when installing on an M1/ARM64 machine
  "Levenshtein==0.21.1"
]

# shared ML dependencies
ml = ["torch==2.0.1", "torchvision==0.15.2", "beartype==0.15.0"]

# Im2MML dependencies. The img2mml service converts equation images to MathML.
# See the skema/img2mml directory.
img2mml = ["skema[ml]", "lxml==4.9.3", "Pillow==10.0.1"]

# dependencies for METAL utilities.
metal = ["skema[ml]", 
      "fire==0.5.0",
      "pyarrow==13.0.0",
      "transformers==4.33.2",
      "sentence_transformers==2.2.2",
      "mock",
      "askem_extractions[all]@git+https://github.com/ml4ai/ASKEM-TA1-DataModel"]

# dependencies for text reading utilities.
tr = ["skema[ml]", "pyarrow==13.0.0",
      "tqdm",
      "pandas==2.0.3"]

# project documentation generation
doc = ["mkdocs==1.2.3", "pdoc3==0.10.0", "mkdocs-git-snippet==0.1.1", "mkdocs-git-revision-date-localized-plugin==0.11.1", "mkdocs-git-authors-plugin==0.6.3", "mkdocs-rtd-dropdown==1.0.2", "jinja2<3.1.0"]

core = ["skema[img2mml]", "skema[isa]", "skema[tr]", "skema[metal]"]

# all extras
all = ["skema[core]", "skema[dev]", "skema[doc]", "skema[demo]"]

[tool.setuptools.package-dir]
"skema.gromet" = "skema/gromet"
"skema.img2mml" = "skema/img2mml"
"skema.isa" = "skema/isa"
"skema.model_assembly" = "skema/model_assembly"
"skema.program_analysis" = "skema/program_analysis"
"skema.skema_py" = "skema/skema_py"
# re-map skema/text_reading/python to skema.text_reading
#"skema.text_reading" = "skema/text_reading/python"
"skema.metal.model_linker" = "skema/metal/model_linker/skema_model_linker"

# [tool.setuptools.packages]
# find = {}  # Scan the project directory with the default parameters

[tool.setuptools.package-data]
# needed to ensure models are included in package/discoverable
"*" = ["*.json", "vocab.txt", "*.pt", "*.png"]

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}
# runnables
[project.scripts]
#skema-tree-sitter-build-fortran-grammar = "skema.program_analysis.CAST.fortran.build_tree_sitter_fortran:main"
link_amr = "skema.metal.model_linker.link_amr:main"
#parquet2json = "skema.text_reading.cosmos_integration:main"

# Minimum requirements for the build system to execute.
[build-system]
requires = ["setuptools>=67", "wheel"]
build-backend = "setuptools.build_meta"

# pytest
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --cov=skema --cov-report html:docs/coverage/python"
testpaths = [
    "skema/img2mml/tests",
    "skema/program_analysis/tests",
    "skema/program_analysis/comment_extractor/tests",
    "skema/program_analysis/tree_sitter_parsers/tests",
    # TODO: Fix fortran tests
    #"skema/program_analysis/CAST/fortran/tests",
    "skema/program_analysis/CAST/matlab/tests",
    #"skema/program_analysis/CAST/python/tests",
    "skema/rest/tests",
    # FIXME: skema_py is not being tested
    # and should probably be removed
    #"skema/skema_py/tests"
]

# Configuration for Black.

# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''
