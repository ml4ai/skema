


from skema.program_analysis.CAST2GrFN.ann_cast.cast_to_annotated_cast import (
    CastToAnnotatedCastVisitor,
)

from skema.program_analysis.CAST2GrFN.ann_cast.id_collapse_pass import (
    IdCollapsePass,
)
from skema.program_analysis.CAST2GrFN.ann_cast.container_scope_pass import (
    ContainerScopePass,
)
from skema.program_analysis.CAST2GrFN.ann_cast.variable_version_pass import (
    VariableVersionPass,
)
from skema.program_analysis.CAST2GrFN.ann_cast.grfn_var_creation_pass import (
    GrfnVarCreationPass,
)
from skema.program_analysis.CAST2GrFN.ann_cast.grfn_assignment_pass import (
    GrfnAssignmentPass,
)
from skema.program_analysis.CAST2GrFN.ann_cast.lambda_expression_pass import (
    LambdaExpressionPass,
)
from skema.program_analysis.CAST2GrFN.ann_cast.to_gromet_pass import (
    ToGrometPass,
)



def run_cast_to_gromet_pipeline(cast):
    """run_cast_to_gromet_pipeline converts a CAST object (generated by run_python_to_cast in this notebook)
    to an AnnotatedCAST (AnnCAST) object. It then runs seven passes over this AnnCAST object to generate
    a GroMEt object which is then returned.

    A script that does this and exports to JSON exists in
    'automates/scripts/program_analysis/run_ann_cast_pipeline.py'

    The individual AnnCAST passes exist under
    'automates/program_analysis/CAST2GrFN/ann_cast/'
    """

    visitor = CastToAnnotatedCastVisitor(cast)
    pipeline_state = visitor.generate_annotated_cast()

    IdCollapsePass(pipeline_state)
    ContainerScopePass(pipeline_state)
    VariableVersionPass(pipeline_state)
    GrfnVarCreationPass(pipeline_state)
    GrfnAssignmentPass(pipeline_state)
    LambdaExpressionPass(pipeline_state)
    ToGrometPass(pipeline_state)

    gromet_object = pipeline_state.gromet_collection

    return gromet_object
