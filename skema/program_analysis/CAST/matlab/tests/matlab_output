
SOURCE:
classdef BasicClass
   properties
      Value {mustBeNumeric}
   end
   methods
      function r = roundOff(obj)
         r = round([obj.Value],2);
      end
      function r = multiplyBy(obj,n)
         r = [obj.Value]*n;
      end
   end
end


SYNTAX TREE: 
node: class_definition
  node: classdef
  node: identifier
  node: properties
    node: properties
    node: property
      node: identifier
      node: validation_functions
        node: {
        node: identifier
        node: }
      node: 

    node: end
  node: methods
    node: methods
    node: function_definition
      node: function
      node: function_output
        node: identifier
        node: =
      node: identifier
      node: function_arguments
        node: (
        node: identifier
        node: )
      node: block
        node: assignment
          node: identifier
          node: =
          node: function_call
            node: identifier
            node: (
            node: arguments
              node: matrix
                node: [
                node: row
                  node: field_expression
                    node: identifier
                    node: .
                    node: identifier
                node: ]
              node: ,
              node: number
            node: )
        node: ;
      node: end
    node: function_definition
      node: function
      node: function_output
        node: identifier
        node: =
      node: identifier
      node: function_arguments
        node: (
        node: identifier
        node: ,
        node: identifier
        node: )
      node: block
        node: assignment
          node: identifier
          node: =
          node: binary_operator
            node: matrix
              node: [
              node: row
                node: field_expression
                  node: identifier
                  node: .
                  node: identifier
              node: ]
            node: *
            node: identifier
        node: ;
      node: end
    node: end
  node: end


generate_cast
run start

TREE STRUCTURE ___________

NODE VISITS ___________

MODULES:
MODULES done

CAST objects:
CAST objects done


