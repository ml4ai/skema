(source_file (function_definition (function_output (identifier)) name: (identifier) (function_arguments arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) (line_continuation) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier) arguments: (identifier)) (comment) (block (assignment left: (identifier) right: (number)) (comment) (assignment left: (identifier) right: (number)) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (number)))))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (number)))))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (range (identifier) (binary_operator left: (identifier) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (comment) (assignment left: (multioutput_variable (identifier) (identifier)) right: (function_call name: (identifier) (arguments argument: (identifier)))) (if_statement condition: (parenthesis (comparison_operator (identifier) (identifier))) (comment) (block (assignment left: (function_call name: (identifier) (arguments argument: (number))) right: (identifier)) (assignment left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (identifier)) (assignment left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (identifier)) (assignment left: (function_call name: (identifier) (arguments argument: (number))) right: (identifier)) (assignment left: (function_call name: (identifier) (arguments argument: (number))) right: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (identifier)))))) (comment) (assignment left: (identifier) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (function_call name: (identifier) (arguments argument: (function_call name: (identifier) (arguments argument: (number) argument: (binary_operator left: (identifier) right: (number)))))))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (number) argument: (binary_operator left: (identifier) right: (number)))))) (assignment left: (identifier) right: (postfix_operator operand: (function_call name: (identifier) (arguments argument: (identifier))))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (parenthesis (identifier)))))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (identifier))))) right: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (number) right: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier))))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (identifier))))) right: (binary_operator left: (identifier) right: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (parenthesis (identifier)))))) right: (binary_operator left: (identifier) right: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (parenthesis (binary_operator left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier)))))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (identifier)))))) argument: (number)))) right: (binary_operator left: (identifier) right: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (identifier)) right: (binary_operator left: (identifier) right: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (identifier)))))) argument: (number)))) right: (binary_operator left: (identifier) right: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (parenthesis (binary_operator left: (number) right: (identifier))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (identifier)) right: (parenthesis (identifier))) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (parenthesis (identifier)))))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (parenthesis (binary_operator left: (number) right: (identifier))) right: (parenthesis (binary_operator left: (unary_operator operand: (postfix_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (identifier)))))))))) right: (postfix_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (identifier)))))))))))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (parenthesis (binary_operator left: (number) right: (identifier))) right: (parenthesis (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (identifier)) right: (parenthesis (identifier))))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (identifier)) right: (parenthesis (identifier))) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (parenthesis (identifier)))))) right: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (postfix_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (identifier))))))))) right: (postfix_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (identifier))))))))))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (identifier)) right: (parenthesis (identifier))))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (identifier)) right: (parenthesis (identifier))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (parenthesis (identifier)))) right: (binary_operator left: (identifier) right: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (identifier))))) right: (binary_operator left: (identifier) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (if_statement condition: (parenthesis (comparison_operator (comparison_operator (identifier) (binary_operator left: (number) right: (identifier))) (number))) (comment) (block (assignment left: (identifier) right: (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (number))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (identifier))) (assignment left: (function_call name: (identifier) (arguments argument: (number))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (identifier)) right: (binary_operator left: (number) right: (number))))) (comment) (elseif_clause condition: (parenthesis (comparison_operator (comparison_operator (identifier) (binary_operator left: (number) right: (identifier))) (number))) (comment) (block (assignment left: (function_call name: (identifier) (arguments argument: (number))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (binary_operator left: (number) right: (number)))))) (comment)) (assignment left: (identifier) right: (matrix (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)))))))