(source_file (comment) (function_definition (function_output (multioutput_variable (identifier))) name: (identifier) (function_arguments arguments: (identifier)) (block (assignment left: (identifier) right: (number)) (comment) (assignment left: (identifier) right: (string (string_content))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (comment) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (comment) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (comment) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (comment) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (comment) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (string (string_content))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (number)) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (number))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (comparison_operator (identifier) (identifier))))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (comparison_operator (identifier) (identifier))))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (identifier)))) (if_statement condition: (parenthesis (comparison_operator (function_call name: (identifier) (arguments argument: (identifier))) (number))) (block (matrix (row (identifier) (identifier))))) (if_statement condition: (parenthesis (function_call name: (identifier) (arguments argument: (identifier)))) (block (assignment left: (identifier) right: (number))) (else_clause (block (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))