(source_file (command (command_name) (command_argument)) (comment) (assignment left: (identifier) right: (number)) (assignment left: (identifier) right: (binary_operator left: (number) right: (number))) (comment) (assignment left: (identifier) right: (number)) (comment) (assignment left: (identifier) right: (binary_operator left: (matrix (row (number)) (row (number)) (row (number))) right: (identifier))) (comment) (assignment left: (identifier) right: (binary_operator left: (matrix (row (number) (number) (number)) (row (number) (number) (number))) right: (matrix (row (postfix_operator operand: (identifier))) (row (postfix_operator operand: (identifier)))))) (comment) (assignment left: (identifier) right: (binary_operator left: (matrix (row (number) (number) (number)) (row (number) (number) (number))) right: (matrix (row (postfix_operator operand: (identifier))) (row (postfix_operator operand: (identifier)))))) (comment) (assignment left: (identifier) right: (binary_operator left: (number) right: (identifier))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (binary_operator left: (number) right: (number))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (number) right: (number)) right: (number))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (number) right: (number)) right: (number))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (number) right: (number)) right: (number))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (number) right: (identifier)) right: (number))) (comment) (assignment left: (identifier) right: (binary_operator left: (number) right: (matrix (row (binary_operator left: (binary_operator left: (number) right: (number)) right: (identifier))) (row (binary_operator left: (binary_operator left: (binary_operator left: (number) right: (number)) right: (number)) right: (identifier))) (row (binary_operator left: (binary_operator left: (binary_operator left: (number) right: (number)) right: (number)) right: (identifier)))))) (comment) (assignment left: (identifier) right: (binary_operator left: (number) right: (identifier))) (comment) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number)))) (comment) (assignment left: (identifier) right: (binary_operator left: (matrix (row (number)) (row (number))) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (matrix (row (number)) (row (number))) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (number) right: (identifier))) (assignment left: (identifier) right: (number)) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (string (string_content)) argument: (string (string_content))))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (assignment left: (identifier) right: (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (identifier)))))) (comment) (assignment left: (identifier) right: (number)) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (matrix (row (number)) (row (number)) (row (number)))) (comment) (assignment left: (identifier) right: (number)) (comment) (assignment left: (identifier) right: (matrix (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)) (row (identifier)))) (assignment left: (multioutput_variable (identifier) (identifier)) right: (function_call name: (identifier) (arguments argument: (lambda (arguments (identifier) (identifier)) expression: (function_call name: (identifier) (arguments argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier) (line_continuation) argument: (identifier) argument: (identifier) argument: (identifier) argument: (identifier)))) argument: (matrix (row (identifier) (identifier))) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number)))) (comment) (comment) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (number) argument: (identifier)))) (assignment left: (identifier) right: (identifier)) (assignment left: (identifier) right: (identifier)) (assignment left: (identifier) right: (identifier)) (assignment left: (identifier) right: (identifier)) (for_statement (iterator (identifier) (matrix (row (range (number) (identifier))))) (comment) (block (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (function_call name: (identifier) (arguments argument: (identifier)))))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (parenthesis (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (number)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (parenthesis (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (number)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (parenthesis (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (number)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (parenthesis (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) right: (parenthesis (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (postfix_operator operand: (matrix (row (function_call name: (identifier) (arguments argument: (identifier))) (function_call name: (identifier) (arguments argument: (identifier)))))))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (postfix_operator operand: (matrix (row (function_call name: (identifier) (arguments argument: (identifier))) (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (postfix_operator operand: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (parenthesis (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) right: (parenthesis (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (postfix_operator operand: (matrix (row (function_call name: (identifier) (arguments argument: (identifier))) (function_call name: (identifier) (arguments argument: (identifier)))))))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (postfix_operator operand: (matrix (row (function_call name: (identifier) (arguments argument: (identifier))) (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (postfix_operator operand: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (parenthesis (binary_operator left: (number) right: (function_call name: (identifier) (arguments argument: (number))))) right: (parenthesis (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (binary_operator left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (postfix_operator operand: (matrix (row (function_call name: (identifier) (arguments argument: (identifier))) (function_call name: (identifier) (arguments argument: (identifier)))))))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (function_call name: (identifier) (arguments argument: (spread_operator) argument: (number))) right: (postfix_operator operand: (matrix (row (function_call name: (identifier) (arguments argument: (identifier))) (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (postfix_operator operand: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (number)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (number)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator operand: (function_call name: (identifier) (arguments argument: (number)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) right: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (binary_operator left: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (binary_operator left: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))))) right: (parenthesis (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (binary_operator left: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))))) right: (parenthesis (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (binary_operator left: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))))) right: (parenthesis (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (identifier))))))))) (comment) (assignment left: (multioutput_variable (identifier) (identifier)) right: (function_call name: (identifier) (arguments argument: (function_call name: (identifier) (arguments argument: (identifier)))))) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (binary_operator left: (binary_operator left: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (parenthesis (binary_operator left: (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))) right: (function_call name: (identifier) (arguments argument: (identifier)))))))) (comment) (assignment left: (function_call name: (identifier) (arguments argument: (identifier))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))) right: (binary_operator left: (parenthesis (binary_operator left: (function_call name: (identifier) (arguments argument: (identifier))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number)))))) right: (parenthesis (binary_operator left: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number))))) right: (binary_operator left: (function_call name: (identifier) (arguments argument: (number))) right: (function_call name: (identifier) (arguments argument: (binary_operator left: (identifier) right: (number))))))))))) (comment)) (assignment left: (identifier) right: (matrix (row (range (identifier) (identifier))))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) argument: (identifier)))) (assignment left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (binary_operator left: (identifier) right: (parenthesis (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) argument: (identifier)))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier))))) argument: (identifier)))) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier))))) argument: (identifier)))) right: (identifier))) (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (function_call name: (identifier) (arguments argument: (identifier) argument: (binary_operator left: (identifier) right: (postfix_operator operand: (parenthesis (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier))))) argument: (identifier)))) right: (identifier))) (comment) (command (command_name) (command_argument)) (identifier) (MISSING ";"))