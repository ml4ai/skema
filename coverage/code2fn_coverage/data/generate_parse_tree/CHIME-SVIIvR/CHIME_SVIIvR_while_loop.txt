(module (comment) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (integer)) consequence: (block (expression_statement (assignment left: (identifier) right: (integer)))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (float) right: (parenthesized_expression (binary_operator left: (float) right: (identifier)))) right: (float))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator argument: (identifier)) right: (identifier)) right: (identifier)) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (integer) right: (identifier)))) right: (identifier)) right: (identifier))) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (integer) right: (identifier)))) right: (identifier)) right: (identifier)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (integer) right: (identifier)))) right: (identifier)) right: (identifier)) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (integer) right: (identifier)))) right: (identifier)) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (binary_operator left: (identifier) right: (identifier))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (return_statement (expression_list (identifier) (identifier) (identifier) (identifier) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (while_statement condition: (comparison_operator (identifier) (identifier)) (comment) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (while_statement condition: (comparison_operator (identifier) (identifier)) (comment) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (comment) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (comment))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (comment))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (return_statement (expression_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (float))) (expression_statement (assignment left: (identifier) right: (list (integer) (integer)))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (identifier) arguments: (argument_list (identifier))) right: (integer)))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (list (float) (float)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (float))) (expression_statement (assignment left: (identifier) right: (float))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (integer)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (while_statement condition: (comparison_operator (identifier) (identifier)) (comment) body: (block (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (subscript value: (identifier) subscript: (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (comment))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) (line_continuation) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))))) (return_statement (expression_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))))))