(module (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (none))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary_comprehension body: (pair key: (identifier) value: (float)) (for_in_clause left: (identifier) right: (subscript value: (identifier) subscript: (identifier))))) (keyword_argument name: (identifier) value: (dictionary_comprehension body: (pair key: (identifier) value: (integer)) (for_in_clause left: (identifier) right: (subscript value: (identifier) subscript: (identifier))))) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (keyword_argument name: (identifier) value: (float)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (identifier))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (identifier))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (identifier))) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (list (identifier) (identifier))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) attribute: (identifier)))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier))))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (list (float) (float) (float)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (float)))))) (expression_statement (assignment left: (identifier) right: (float))) (expression_statement (assignment left: (identifier) right: (float))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (string (string_start) (string_content) (string_end))) right: (integer))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (for_statement left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (list_comprehension body: (call function: (identifier) arguments: (argument_list)) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (expression_statement (assignment left: (identifier) right: (list_comprehension body: (call function: (identifier) arguments: (argument_list)) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (expression_statement (assignment left: (identifier) right: (list_comprehension body: (call function: (identifier) arguments: (argument_list)) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (expression_statement (assignment left: (identifier) right: (list_comprehension body: (call function: (identifier) arguments: (argument_list)) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (string (string_start) (string_content) (string_end)))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (integer)))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (list (identifier) (identifier)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (list (identifier) (identifier)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (true))) (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)))) (if_statement condition: (boolean_operator left: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) right: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier)))) consequence: (block (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (call function: (identifier) arguments: (argument_list (identifier)))) attribute: (identifier)) arguments: (argument_list (identifier)))))) (if_statement condition: (boolean_operator left: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) right: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier)))) consequence: (block (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (call function: (identifier) arguments: (argument_list (identifier)))) attribute: (identifier)) arguments: (argument_list (identifier)))))) (if_statement condition: (boolean_operator left: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) right: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier)))) consequence: (block (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (call function: (identifier) arguments: (argument_list (identifier)))) attribute: (identifier)) arguments: (argument_list (identifier))))))) alternative: (else_clause body: (block (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (list (integer)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (list (identifier)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (false))) (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (integer)) attribute: (identifier)) arguments: (argument_list (identifier))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))))) (comment) (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (tuple (integer) (integer))) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (float)) (pair key: (string (string_start) (string_content) (string_end)) value: (float)) (pair key: (string (string_start) (string_content) (string_end)) value: (float)) (pair key: (string (string_start) (string_content) (string_end)) value: (float)) (pair key: (string (string_start) (string_content) (string_end)) value: (float)) (pair key: (string (string_start) (string_content) (string_end)) value: (float))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (float) (float) (float) (float)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (integer)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (integer))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (dictionary_splat (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (float))) (dictionary_splat (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (float))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) body: (block (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (interpolation expression: (subscript value: (identifier) subscript: (identifier))) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (subscript value: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (string (string_start) (string_content) (string_end))) subscript: (identifier))) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier)))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (identifier) arguments: (argument_list (identifier) (identifier)))))) (for_statement left: (identifier) right: (identifier) body: (block (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (dictionary_splat (identifier))))))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (for_statement left: (identifier) right: (identifier) body: (block (if_statement condition: (attribute object: (identifier) attribute: (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier))))))))) (if_statement condition: (identifier) consequence: (block (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (integer))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (dictionary_splat (identifier))))))))) (if_statement condition: (identifier) consequence: (block (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (float))) (dictionary_splat (identifier))))))))) (if_statement condition: (identifier) consequence: (block (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (float)))))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (identifier)) (list (float) (float)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (integer))))))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))