(module (expression_statement (string (string_start) (string_content) (string_end))) (comment) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (comment) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (comment) (import_statement name: (dotted_name (identifier))) (comment) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (comment) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (comment) (import_from_statement module_name: (relative_import (import_prefix)) name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (list))) (comment) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (list (integer) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (list (integer) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (binary_operator left: (identifier) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (identifier)))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (list (integer) (integer) (integer) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) consequence: (block (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_content) (string_end)))) (raise_statement (call function: (identifier) arguments: (argument_list (identifier)))))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (comment) (comment) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (identifier) (identifier) (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (comparison_operator (identifier) (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (subscript value: (identifier) subscript: (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))) right: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (comment) (expression_statement (assignment left: (identifier) right: (comparison_operator (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (identifier)) (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (binary_operator left: (identifier) right: (unary_operator argument: (identifier))))) right: (parenthesized_expression (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))))))))) (comment) (return_statement (identifier))))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (identifier) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (identifier) (identifier) (identifier) (subscript value: (identifier) subscript: (slice))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (binary_operator left: (unary_operator argument: (identifier)) right: (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (unary_operator argument: (identifier)) right: (binary_operator left: (identifier) right: (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (unary_operator argument: (identifier)) right: (binary_operator left: (identifier) right: (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (integer) right: (identifier)))))) (comment) (return_statement (expression_list (identifier) (identifier)))))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (false))) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (conditional_expression (list (list (identifier) (identifier)) (list (identifier) (identifier))) (not_operator argument: (identifier)) (list (list (identifier) (identifier)))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (identifier) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) subscript: (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (subscript value: (identifier) subscript: (identifier))) right: (subscript value: (identifier) subscript: (identifier))) right: (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) subscript: (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (parenthesized_expression (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) (identifier))) attribute: (identifier)) arguments: (argument_list)) subscript: (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (identifier)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (identifier)) (keyword_argument name: (identifier) value: (integer)))))))) (return_statement (expression_list (identifier) (identifier)))))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (identifier) subscript: (slice)) (subscript value: (identifier) subscript: (slice)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice))) (keyword_argument name: (identifier) value: (identifier))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) body: (block (if_statement condition: (comparison_operator (subscript value: (identifier) subscript: (identifier)) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier))))))) (if_statement condition: (comparison_operator (subscript value: (identifier) subscript: (identifier)) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier))))))))) (return_statement (identifier))))) (comment) (expression_statement (augmented_assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (function_definition name: (identifier) parameters: (parameters (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (dictionary_splat_pattern (identifier))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (comment) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (comment) (comment) (if_statement condition: (comparison_operator (identifier) (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier))))))) alternative: (elif_clause condition: (comparison_operator (identifier) (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)))))))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)))))))))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)))))))))))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)))))) (comment))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier)))))) (comment))) alternative: (elif_clause condition: (comparison_operator (identifier) (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) consequence: (block (if_statement condition: (comparison_operator (identifier) (integer)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (integer)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (integer)) right: (binary_operator left: (identifier) right: (integer)))))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (integer)) right: (binary_operator left: (identifier) right: (integer))) right: (integer)))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (identifier))))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))))) (if_statement condition: (comparison_operator (string (string_start) (string_content) (string_end)) (identifier)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) (string_end)))) (raise_statement (call function: (identifier) arguments: (argument_list (identifier))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (aliased_import name: (dotted_name (identifier) (identifier)) alias: (identifier))) (comment) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (if_statement condition: (comparison_operator (identifier) (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (none))) consequence: (block (return_statement (none))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))))))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (integer)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (integer)))))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (integer))) right: (integer)))))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (float))) (keyword_argument name: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (string (string_start) (string_content (escape_sequence)) (string_end)) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_end)))) (raise_statement (call function: (identifier) arguments: (argument_list (identifier))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier)) (keyword_argument name: (identifier) value: (identifier))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))))) (comment) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (comment) (if_statement condition: (comparison_operator (identifier) (none)) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (float))))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) (comment) (return_statement))) (comment) (expression_statement (augmented_assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (subscript value: (call function: (attribute object: (parenthesized_expression (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) (identifier))) attribute: (identifier)) arguments: (argument_list)) subscript: (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))))))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))) (comment)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (integer))) subscript: (integer)))))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))) (comment)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (integer))) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))) right: (identifier)))) (return_statement (identifier)))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (identifier)) (keyword_argument name: (identifier) value: (identifier)))) (comment)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (false)))))))) (decorated_definition (decorator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (identifier)) (keyword_argument name: (identifier) value: (identifier)))) (comment)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (true)))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (true))) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (identifier) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))))) alternative: (else_clause (comment) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (identifier))))))) (return_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (not_operator argument: (parenthesized_expression (identifier))))))))) (comment) (expression_statement (augmented_assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) subscript: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) attribute: (identifier)) arguments: (argument_list)) subscript: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (call function: (attribute object: (parenthesized_expression (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) attribute: (identifier)) arguments: (argument_list)) subscript: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) attribute: (identifier)) arguments: (argument_list)) subscript: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier)))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (identifier) subscript: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)))))))))