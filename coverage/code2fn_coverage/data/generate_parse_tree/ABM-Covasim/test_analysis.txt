(module (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (dotted_name (identifier))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (false))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)))))) (comment) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))))))))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (string (string_start) (string_content) (string_end))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (comment) (assert_statement (comparison_operator (identifier) (identifier)) (string (string_start) (string_content) (string_end))) (assert_statement (comparison_operator (identifier) (identifier)) (string (string_start) (string_content) (string_end))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (comment) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (comment) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (integer))))) (assert_statement (comparison_operator (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) (call function: (identifier) arguments: (argument_list (identifier)))) (string (string_start) (string_content) (string_end))) (comment) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (true)) (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end))))))))) (assert_statement (comparison_operator (call function: (identifier) arguments: (argument_list (identifier))) (call function: (identifier) arguments: (argument_list (identifier)))) (string (string_start) (string_content) (string_end))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (true)) (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (float))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (comment) (expression_statement (assignment left: (identifier) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (integer) (integer))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (integer) (integer))))) (pair key: (string (string_start) (string_content) (string_end)) value: (list (float) (float) (float)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (true)))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))))) (assert_statement (comparison_operator (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier))) (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (integer) (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (integer) (integer) (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (integer))) body: (block (return_statement (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (identifier) arguments: (argument_list (binary_operator left: (identifier) right: (identifier)))))) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (false)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (float)))))) (assert_statement (comparison_operator (identifier) (identifier))) (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))))) (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (float)))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (float) (float) (float))) (keyword_argument name: (identifier) value: (list (float) (float) (float))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (return_statement (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (assert_statement (comparison_operator (attribute object: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) attribute: (identifier)) (attribute object: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) attribute: (identifier)))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier)))))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (false))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))))) (comment) (try_statement body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (true)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (except_clause (as_pattern (identifier) alias: (as_pattern_target (identifier))) (block (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (interpolation expression: (call function: (identifier) arguments: (argument_list (identifier)))) (string_content) (string_end)))))))) (return_statement (identifier)))) (comment) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) (comment) consequence: (block (expression_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content (escape_sequence)) (string_end)) right: (integer))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end))))))))