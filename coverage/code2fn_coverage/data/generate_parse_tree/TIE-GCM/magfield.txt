(translation_unit (comment) (ERROR (module_statement (name)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (use_statement (module_name) (included_items (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))) (ERROR) (ERROR (UNEXPECTED '|')) (use_statement (module_name) (included_items (identifier) (identifier) (identifier))) (use_statement (module_name) (included_items (identifier))) (implicit_statement (none)) (ERROR (comment) (comment)) (comment) (variable_declaration (intrinsic_type) (type_qualifier (argument_list (identifier) (extent_specifier (number_literal) (identifier)))) (ERROR (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (number_literal) (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (number_literal) (comment) (UNEXPECTED '|') (number_literal) (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment)) (call_expression (identifier) (ERROR) (argument_list (identifier) (extent_specifier (number_literal) (identifier)) (number_literal) (number_literal)))) (comment) (comment) (comment) (comment) (comment) (variable_declaration (intrinsic_type) (call_expression (identifier) (argument_list (identifier) (extent_specifier (number_literal) (identifier)) (number_literal) (number_literal)))) (comment) (comment) (comment) (comment) (variable_declaration (intrinsic_type) (ERROR (UNEXPECTED '|')) (call_expression (complex_literal (identifier) (identifier)) (ERROR (comment) (UNEXPECTED '|')) (argument_list (identifier) (identifier))) (comment) (ERROR (UNEXPECTED '|')) (call_expression (complex_literal (identifier) (number_literal) (ERROR)) (ERROR (comment) (UNEXPECTED '|')) (argument_list (identifier) (extent_specifier (number_literal) (identifier))))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (variable_declaration (intrinsic_type) (ERROR (UNEXPECTED '|')) (assignment_statement left: (implied_do_loop_expression (number_literal) (identifier) (identifier) (ERROR) (ERROR (UNEXPECTED '|')) (complex_literal (identifier) (number_literal) (ERROR)) (ERROR (UNEXPECTED '|') (complex_literal (identifier) (number_literal) (ERROR)) (comment) (comment) (comment) (comment) (comment)) (identifier) (call_expression (identifier) (argument_list (identifier) (identifier))) (ERROR (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|')) (comment) (ERROR (UNEXPECTED '|') (comment) (comment) (comment) (comment)) (call_expression (identifier) (ERROR (UNEXPECTED '|')) (argument_list (extent_specifier (number_literal) (identifier)))) (comment) (ERROR (UNEXPECTED '|')) (parenthesized_expression (number_literal) (ERROR)) (comment) (ERROR (UNEXPECTED '|')) (parenthesized_expression (identifier)) (comment) (ERROR (UNEXPECTED '|')) (parenthesized_expression (identifier)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (ERROR) (call_expression (identifier) (argument_list (identifier) (extent_specifier (unary_expression argument: (number_literal)) (identifier)))) (ERROR) (identifier) (identifier) (identifier) (ERROR) (call_expression (identifier) (argument_list (identifier) (identifier))) (ERROR (UNEXPECTED '|')) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (relational_expression left: (relational_expression left: (call_expression (identifier) (comment) (comment) (comment) (comment) (ERROR) (argument_list (identifier))) (comment) (ERROR (comment)) right: (identifier)) (ERROR) (ERROR (comment) (comment) (comment) (comment) (comment) (comment) (comment) (call_expression (identifier) (argument_list (relational_expression left: (relational_expression left: (identifier) right: (number_literal)) (ERROR) right: (number_literal))))) right: (identifier)) (loop_control_expression (identifier) (ERROR (ERROR (comment) (call_expression (identifier) (argument_list (relational_expression left: (relational_expression left: (identifier) right: (number_literal)) (ERROR) right: (number_literal))))) (identifier) (identifier)) (number_literal) (comment) (ERROR) (ERROR (comment) (comment) (comment) (comment) (comment)) (identifier) (call_expression (call_expression (call_expression (identifier) (argument_list (extent_specifier (unary_expression argument: (number_literal)) (identifier)) (extent_specifier (unary_expression argument: (number_literal)) (identifier)))) (ERROR (comment)) (argument_list (math_expression left: (number_literal) right: (math_expression left: (identifier) right: (number_literal))))) (ERROR) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (MISSING ")")) right: (call_expression (identifier) (argument_list (identifier) (identifier))))) (ERROR) (assignment_statement left: (complex_literal (identifier) (identifier)) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (unary_expression argument: (identifier)) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) (comment) (comment) (if_statement (parenthesized_expression (relational_expression left: (math_expression left: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))))) right: (identifier)) right: (number_literal))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (parenthesized_expression (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (math_expression left: (number_literal) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (number_literal))))))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (parenthesized_expression (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (math_expression left: (number_literal) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (number_literal))))))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (call_expression (identifier) (argument_list (identifier) (identifier)))))) (end_if_statement)) (ERROR (identifier)) (comment) (comment) (do_loop_statement (loop_control_expression (identifier) (number_literal) (number_literal)) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (number_literal)))) right: (call_expression (unary_expression argument: (identifier)) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (number_literal) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (number_literal)))) right: (call_expression (unary_expression argument: (identifier)) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (number_literal) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (number_literal)))) right: (call_expression (identifier) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (number_literal) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (number_literal)))) right: (call_expression (identifier) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (number_literal) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (identifier)))) right: (call_expression (unary_expression argument: (identifier)) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (identifier)))) right: (call_expression (unary_expression argument: (identifier)) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (identifier)))) right: (call_expression (identifier) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (math_expression left: (identifier) right: (identifier)))) right: (call_expression (identifier) (argument_list (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (math_expression left: (identifier) right: (number_literal))) (identifier)))) (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier))))) (end_do_loop_statement)) (end_do_loop_statement)) (comment) (comment) (do_loop_statement (loop_control_expression (identifier) (number_literal) (number_literal)) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier)))) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier)))) (end_do_loop_statement)) (end_do_loop_statement)) (do_loop_statement (loop_control_expression (identifier) (number_literal) (number_literal)) (do_loop_statement (loop_control_expression (identifier) (unary_expression argument: (number_literal)) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (identifier))) right: (call_expression (identifier) (argument_list (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (identifier)) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier)) (identifier))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) (end_do_loop_statement)) (end_do_loop_statement)) (comment) (comment) (comment) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (extent_specifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (extent_specifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (extent_specifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (extent_specifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (extent_specifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (extent_specifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (extent_specifier))) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)) (extent_specifier)))) (end_do_loop_statement)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (call_expression (identifier) (ERROR (comment) (UNEXPECTED '_')) (argument_list (identifier) (identifier) (identifier))) (call_expression (identifier) (ERROR (UNEXPECTED '_') (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment)) (argument_list (extent_specifier (identifier) (ERROR) (identifier)) (comment) (ERROR (UNEXPECTED '|') (comment)) (identifier) (extent_specifier (call_expression (identifier) (argument_list (identifier))) (identifier)) (comment) (comment) (comment) (ERROR) (identifier) (ERROR (identifier)) (extent_specifier (identifier) (identifier)) (identifier) (identifier) (identifier) (comment) (ERROR (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment)) (parenthesized_expression (math_expression left: (identifier) right: (number_literal))) (MISSING ")"))) (assignment_statement left: (identifier) right: (call_expression (identifier) (argument_list (math_expression left: (parenthesized_expression (math_expression left: (identifier) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (number_literal)))) right: (number_literal))))) (assignment_statement left: (identifier) right: (math_expression left: (math_expression left: (identifier) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (number_literal))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (number_literal)))) (comment) (comment) (comment) (comment) (subroutine_call subroutine: (identifier) (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))) (assignment_statement left: (identifier) right: (math_expression left: (math_expression left: (math_expression left: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (number_literal))) right: (math_expression left: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (number_literal)) right: (number_literal))) (ERROR (UNEXPECTED '|')) right: (math_expression left: (math_expression left: (math_expression left: (parenthesized_expression (identifier)) right: (number_literal)) right: (number_literal)) right: (number_literal))) right: (math_expression left: (math_expression left: (math_expression left: (math_expression left: (identifier) right: (number_literal)) right: (number_literal)) right: (number_literal)) right: (number_literal)))) (subroutine_call subroutine: (identifier) (argument_list (identifier))) (subroutine_call subroutine: (identifier) (argument_list (identifier) (identifier) (identifier))) (comment) (comment) (comment) (subroutine_call subroutine: (identifier) (argument_list (identifier) (identifier) (identifier) (identifier) (identifier))) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal))) right: (math_expression left: (identifier) right: (identifier))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (number_literal)))) (end_do_loop_statement)) (comment) (comment) (ERROR (UNEXPECTED '_') (comment)) (UNEXPECTED '_')))