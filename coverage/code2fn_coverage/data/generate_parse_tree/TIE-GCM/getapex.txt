(translation_unit (ERROR (comment)) (module (module_statement (name)) (comment) (comment) (comment) (comment) (comment) (comment) (use_statement (module_name) (included_items)) (ERROR (UNEXPECTED '|')) (comment) (ERROR (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment)) (use_statement (module_name) (included_items (identifier) (identifier) (identifier))) (implicit_statement (none)) (variable_declaration (intrinsic_type) (type_qualifier) (ERROR (UNEXPECTED '|') (comment) (comment)) (identifier) (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal)))) (ERROR) (variable_declaration (intrinsic_type) (type_qualifier (argument_list (identifier) (identifier))) (identifier) (identifier)) (variable_declaration (intrinsic_type) (type_qualifier (argument_list (identifier))) (identifier)) (variable_declaration (intrinsic_type) (type_qualifier (argument_list (identifier))) (identifier)) (variable_declaration (intrinsic_type) (type_qualifier (argument_list (identifier))) (identifier)) (comment) (comment) (comment) (variable_declaration (intrinsic_type) (type_qualifier (argument_list (identifier) (identifier))) (identifier) (identifier)) (comment) (internal_procedures (contains_statement) (comment) (subroutine (subroutine_statement name: (name) parameters: (parameters (identifier))) (use_statement (module_name) (included_items (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (ERROR (UNEXPECTED '|')) (identifier) (identifier))) (use_statement (module_name) (included_items)) (ERROR (UNEXPECTED '|')) (comment) (ERROR (UNEXPECTED '|')) (comment) (ERROR (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|')) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (variable_declaration (intrinsic_type) (type_qualifier) (identifier)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (variable_declaration (intrinsic_type) (type_qualifier) (ERROR (UNEXPECTED '|')) (assignment_statement left: (number_literal) (ERROR (UNEXPECTED '|')) right: (number_literal))) (comment) (comment) (variable_declaration (intrinsic_type) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) (variable_declaration (intrinsic_type) (assignment_statement left: (identifier) right: (number_literal))) (variable_declaration (intrinsic_type) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (ERROR (UNEXPECTED '|')) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (ERROR (UNEXPECTED '|')) (identifier) (identifier) (identifier) (call_expression (identifier) (argument_list (number_literal))) (identifier)) (variable_declaration (intrinsic_type) (size (argument_list (keyword_argument name: (identifier) value: (number_literal)))) (identifier)) (comment) (comment) (variable_declaration (intrinsic_type) (ERROR (UNEXPECTED '|')) (call_expression (parenthesized_expression (number_literal)) (ERROR) (argument_list (number_literal))) (ERROR (UNEXPECTED '|')) (call_expression (number_literal) (argument_list (number_literal))) (call_expression (identifier) (argument_list (number_literal))) (call_expression (identifier) (argument_list (number_literal))) (ERROR (UNEXPECTED '|')) (call_expression (number_literal) (argument_list (number_literal))) (call_expression (identifier) (argument_list (number_literal))) (call_expression (identifier) (argument_list (number_literal))) (ERROR (UNEXPECTED '|')) (call_expression (number_literal) (argument_list (number_literal))) (call_expression (identifier) (argument_list (number_literal)))) (comment) (comment) (comment) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal))) right: (number_literal)) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal))) right: (number_literal)) (assignment_statement left: (identifier) right: (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)))))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (math_expression left: (math_expression left: (parenthesized_expression (math_expression left: (identifier) right: (number_literal))) right: (identifier)) right: (number_literal))) (end_do_loop_statement)) (assignment_statement left: (identifier) right: (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (number_literal)))))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (math_expression left: (math_expression left: (parenthesized_expression (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (number_literal))) right: (identifier)) right: (number_literal))) (end_do_loop_statement)) (comment) (comment) (comment) (comment) (subroutine_call subroutine: (identifier) (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))) (if_statement (parenthesized_expression (relational_expression left: (identifier) right: (number_literal))) (subroutine_call subroutine: (identifier) (argument_list (string_literal)))) (comment) (comment) (comment) (comment) (comment) (assignment_statement left: (identifier) right: (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (number_literal))) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (number_literal))) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (number_literal))) (assignment_statement left: (identifier) right: (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (parenthesized_expression (math_expression left: (parenthesized_expression (math_expression left: (identifier) right: (identifier))) right: (parenthesized_expression (math_expression left: (identifier) right: (identifier))))) right: (number_literal))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier)))))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (identifier))) (subroutine_call subroutine: (identifier) (argument_list (ERROR (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|') (comment) (UNEXPECTED '|')) (number_literal) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (ERROR (comment) (UNEXPECTED '|')) (identifier) (identifier) (identifier) (identifier))) (comment) (if_statement (parenthesized_expression (relational_expression left: (identifier) right: (number_literal))) (subroutine_call subroutine: (identifier) (argument_list (string_literal)))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (number_literal))) right: (number_literal))) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (number_literal))) right: (number_literal))) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (unary_expression argument: (identifier)) (argument_list (number_literal))) right: (number_literal))) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (number_literal))) (comment) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (math_expression left: (number_literal) right: (call_expression (identifier) (argument_list (math_expression left: (identifier) right: (identifier))))) right: (parenthesized_expression (math_expression left: (identifier) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (math_expression left: (math_expression left: (call_expression (identifier) (argument_list (number_literal))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (math_expression left: (math_expression left: (call_expression (identifier) (argument_list (number_literal))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (math_expression left: (math_expression left: (call_expression (identifier) (argument_list (number_literal))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (math_expression left: (math_expression left: (math_expression left: (call_expression (unary_expression argument: (identifier)) (argument_list (number_literal))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) right: (identifier)) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (math_expression left: (math_expression left: (math_expression left: (call_expression (unary_expression argument: (identifier)) (argument_list (number_literal))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) right: (identifier)) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (math_expression left: (math_expression left: (math_expression left: (call_expression (unary_expression argument: (identifier)) (argument_list (number_literal))) right: (call_expression (identifier) (argument_list (identifier) (identifier)))) right: (identifier)) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (unary_expression argument: (identifier)) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (unary_expression argument: (identifier)) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier)) (comment) (comment) (assignment_statement left: (identifier) right: (math_expression left: (parenthesized_expression (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (number_literal))))) right: (identifier))) (if_statement (parenthesized_expression (relational_expression left: (identifier) right: (number_literal))) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (number_literal))) (if_statement (parenthesized_expression (relational_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))) (call_expression (identifier) (argument_list (identifier)))))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (if_statement (parenthesized_expression (relational_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (identifier))))) (keyword_statement)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (number_literal))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (parenthesized_expression (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))))))) (ERROR (UNEXPECTED '|')) right: (parenthesized_expression (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))))))))) (keyword_statement) (end_do_loop_statement)) (if_statement (parenthesized_expression (logical_expression left: (relational_expression left: (identifier) right: (number_literal)) right: (relational_expression left: (identifier) right: (identifier)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier) (number_literal) (number_literal))) right: (call_expression (identifier) (argument_list (number_literal)))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier)) (comment) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (identifier))) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier)))))) (end_if_statement)) (end_do_loop_statement)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (end_do_loop_statement)) (comment) (comment) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier)))))) (end_do_loop_statement)) (comment) (comment) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (identifier))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (identifier))) (subroutine_call subroutine: (identifier) (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))) (if_statement (parenthesized_expression (relational_expression left: (identifier) right: (number_literal))) (write_statement (unit_identifier (number_literal)) (ERROR (UNEXPECTED '\n') (UNEXPECTED '|') (format_identifier (string_literal)) (identifier) (format_identifier (string_literal)) (identifier) (UNEXPECTED '\n')) (format_identifier (parenthesized_expression (string_literal))) (MISSING ")")) (end_if_statement)) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (identifier))) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (identifier))) (assignment_statement left: (identifier) right: (math_expression left: (parenthesized_expression (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (number_literal))))) right: (identifier))) (if_statement (parenthesized_expression (relational_expression left: (identifier) right: (number_literal))) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (identifier)))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier)) (assignment_statement left: (identifier) right: (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))))))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (number_literal))) (if_statement (parenthesized_expression (relational_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (identifier)))) (assignment_statement left: (identifier) right: (call_expression (identifier) (argument_list (identifier) (call_expression (identifier) (argument_list (identifier)))))) (do_loop_statement (loop_control_expression (identifier) (number_literal) (identifier)) (if_statement (parenthesized_expression (relational_expression left: (identifier) right: (call_expression (identifier) (argument_list (identifier))))) (keyword_statement)) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (number_literal))) (assignment_statement left: (identifier) right: (math_expression left: (parenthesized_expression (math_expression left: (identifier) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier))))))) right: (call_expression (number_literal) (argument_list (math_expression left: (call_expression (identifier) (argument_list (identifier))) right: (call_expression (identifier) (argument_list (call_expression (identifier) (argument_list (identifier) (identifier)))))))))) (comment) (comment) (comment) (comment) (comment) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (number_literal))) (keyword_statement) (end_do_loop_statement)) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal) (identifier) (identifier))) right: (math_expression left: (parenthesized_expression (math_expression left: (number_literal) right: (identifier))) right: (parenthesized_expression (math_expression left: (number_literal) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal) (identifier) (identifier))) right: (math_expression left: (identifier) right: (parenthesized_expression (math_expression left: (number_literal) right: (identifier))))) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal) (identifier) (identifier))) right: (math_expression left: (identifier) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (number_literal) (identifier) (identifier))) right: (math_expression left: (parenthesized_expression (math_expression left: (number_literal) right: (identifier))) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (identifier))) (assignment_statement left: (call_expression (identifier) (argument_list (identifier) (identifier))) right: (math_expression left: (identifier) right: (identifier))) (end_do_loop_statement)) (end_do_loop_statement)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (end_subroutine_statement (name)))) (end_module_statement (name))))