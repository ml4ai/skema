(module (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier) (identifier)) alias: (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (identifier))) right: (parenthesized_expression (binary_operator left: (float) right: (identifier)))))) right: (parenthesized_expression (binary_operator left: (float) right: (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (float))) right: (parenthesized_expression (binary_operator left: (float) right: (identifier)))) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (float))) right: (identifier))) right: (integer))) right: (identifier)))) (return_statement (call function: (identifier) arguments: (argument_list (identifier) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (identifier)))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (float))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) (identifier))))) (return_statement (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (identifier)) right: (identifier)))))) (comment) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier)))) right: (identifier)) right: (float)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier))))) (comment) (return_statement (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (identifier)) right: (identifier))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (unary_operator argument: (attribute object: (identifier) attribute: (identifier))))))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (while_statement condition: (true) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (comparison_operator (identifier) (identifier))) right: (parenthesized_expression (comparison_operator (identifier) (identifier)))))) (if_statement condition: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) attribute: (identifier)) arguments: (argument_list)) consequence: (block (return_statement (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier))))) subscript: (unary_operator argument: (identifier)))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (identifier))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (float) right: (float)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (float)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (identifier)) right: (float)))) (return_statement (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier)))))))