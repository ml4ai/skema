(module (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (dotted_name (identifier))) (expression_statement (assignment left: (identifier) right: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (tuple (integer) (integer) (integer))))) (if_statement condition: (identifier) consequence: (block (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (comment)) alternative: (else_clause (comment) body: (block (class_definition name: (identifier) (comment) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (comment) (expression_statement (call function: (identifier) arguments: (argument_list (identifier) (attribute object: (identifier) attribute: (identifier)) (identifier)))) (return_statement (identifier))))))))))