(module (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (dotted_name (identifier))) (import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (comment) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (comment) (comment) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (slice) subscript: (slice (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (slice) subscript: (slice (integer))))) right: (float)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (float)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (keyword_argument name: (identifier) value: (identifier)))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer)))) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (identifier)) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (slice) subscript: (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (binary_operator left: (identifier) right: (integer))) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (slice) subscript: (binary_operator left: (identifier) right: (integer)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (binary_operator left: (identifier) right: (integer))) right: (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (identifier))) right: (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (binary_operator left: (identifier) right: (integer)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer)) (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer))) (keyword_argument name: (identifier) value: (identifier)))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) body: (block (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (identifier)) right: (binary_operator left: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)) (unary_operator argument: (integer)))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier))))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)) (integer)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier))))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))) (identifier) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (return_statement (expression_list (identifier) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (keyword_argument name: (identifier) value: (identifier)))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)) (subscript value: (identifier) subscript: (identifier)))) right: (integer)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (comparison_operator (identifier) (unary_operator argument: (integer)))) right: (integer))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (comparison_operator (identifier) (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer)))) right: (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer)))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (slice) subscript: (slice (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (binary_operator left: (identifier) right: (integer)) (keyword_argument name: (identifier) value: (integer)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (integer))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (float) right: (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (comparison_operator (identifier) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (true)))))) right: (float))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (float)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (float) right: (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (comparison_operator (identifier) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (true)))))) right: (float))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (float)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (return_statement (expression_list (identifier) (identifier) (identifier) (identifier) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (unary_operator argument: (integer)))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (parenthesized_expression (comparison_operator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))) (integer))) attribute: (identifier)) arguments: (argument_list (integer))))) (return_statement (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (identifier)) right: (identifier))))) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (dictionary))) (comment) (comment) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (attribute object: (identifier) attribute: (identifier))) attribute: (identifier)) arguments: (argument_list (identifier)))) (expression_statement (call function: (attribute object: (subscript value: (identifier) subscript: (attribute object: (identifier) attribute: (identifier))) attribute: (identifier)) arguments: (argument_list (identifier)))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)))))))) (comment) (expression_statement (assignment left: (identifier) right: (dictionary))) (for_statement left: (identifier) right: (identifier) body: (block (if_statement condition: (comparison_operator (identifier) (integer)) consequence: (block (continue_statement))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier))) (subscript value: (identifier) subscript: (identifier)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))))) (if_statement condition: (true) (comment) (comment) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (attribute object: (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier))) attribute: (identifier)) right: (tuple (identifier))) (keyword_argument name: (identifier) value: (identifier)))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (identifier)) (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier)) subscript: (slice)))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (identifier)) (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier)) subscript: (slice)))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (identifier)) (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (subscript value: (identifier) subscript: (identifier)) subscript: (slice)))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (identifier)) (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (subscript value: (identifier) subscript: (identifier)) subscript: (slice))))))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (subscript value: (identifier) subscript: (identifier) subscript: (slice)))))) (expression_statement (augmented_assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (subscript value: (identifier) subscript: (identifier) subscript: (slice)))))) (expression_statement (augmented_assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (slice)))))) (expression_statement (augmented_assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (subscript value: (identifier) subscript: (slice) subscript: (identifier) subscript: (slice))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))))) (return_statement (expression_list (identifier) (identifier) (identifier))))) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (integer) (integer))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (identifier))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (identifier))) (integer) (integer))) right: (identifier)))) (return_statement (expression_list (identifier) (identifier))))) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (true))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (integer))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (integer)) right: (identifier)))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (integer) (binary_operator left: (identifier) right: (integer)) (keyword_argument name: (identifier) value: (identifier)))) subscript: (slice (integer) (unary_operator argument: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))))) (expression_statement (assignment left: (identifier) right: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (identifier) (identifier) (identifier)))) attribute: (identifier)))) (comment) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))) (if_statement condition: (identifier) consequence: (block (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)))) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (pattern_list (subscript value: (identifier) subscript: (identifier)) (identifier)) right: (call function: (identifier) arguments: (argument_list (comment) (identifier) (identifier) (identifier))))))))) (return_statement (expression_list (identifier) (identifier) (identifier))))) (class_definition name: (identifier) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (float)))))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (float)))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (float) right: (parenthesized_expression (binary_operator left: (identifier) right: (float)))))))))) (class_definition name: (identifier) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (identifier))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (identifier))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (subscript value: (identifier) subscript: (integer)) attribute: (identifier)) subscript: (unary_operator argument: (integer))))) subscript: (none) subscript: (ellipsis)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (false) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (unary_operator argument: (float)))) (while_statement condition: (true) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (binary_operator left: (float) right: (parenthesized_expression (binary_operator left: (identifier) right: (integer)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (binary_operator left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (binary_operator left: (identifier) right: (identifier))))) (float)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (augmented_assignment left: (identifier) right: (float))) (if_statement condition: (comparison_operator (identifier) (float)) consequence: (block (raise_statement (identifier)))) (if_statement condition: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) consequence: (block (return_statement (binary_operator left: (identifier) right: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (none)) right: (identifier)))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (string (string_start) (string_content) (string_end))) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (string (string_start) (string_content) (string_end))) (default_parameter name: (identifier) value: (false)) (default_parameter name: (identifier) value: (false)) (default_parameter name: (identifier) value: (false))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier))))) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (none))))))))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (false) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (integer))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (true)))))) (while_statement condition: (true) (comment) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (comment) (if_statement condition: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))))) consequence: (block (expression_statement (assignment left: (identifier) right: (unary_operator argument: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (keyword_argument name: (identifier) value: (integer))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (float)))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier)))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) subscript: (ellipsis) subscript: (none)) right: (identifier)))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (integer)) (keyword_argument name: (identifier) value: (integer)))))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (integer)) (keyword_argument name: (identifier) value: (integer))))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (identifier)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (none)) right: (identifier)) right: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none)))) right: (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (identifier))) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (comparison_operator (identifier) (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) right: (parenthesized_expression (comparison_operator (identifier) (integer)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (if_statement condition: (boolean_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (parenthesized_expression (comparison_operator (identifier) (integer)))) consequence: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (identifier) right: (comparison_operator (identifier) (binary_operator left: (float) right: (integer))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (integer)))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (false)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (binary_operator left: (identifier) right: (integer)))) (if_statement condition: (comparison_operator (identifier) (integer)) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (parenthesized_expression (comparison_operator (identifier) (identifier))) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (comparison_operator (identifier) (identifier))) right: (parenthesized_expression (comparison_operator (identifier) (identifier))))))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) right: (identifier)))) (comment) (comment) (if_statement condition: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (false))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))))) (comment) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (identifier)))) right: (string (string_start) (string_content) (string_end))) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (identifier)) (integer)))))) right: (string (string_start) (string_content) (string_end))) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (identifier)) (integer))))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) right: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (if_statement condition: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (parenthesized_expression (comparison_operator (identifier) (identifier)))) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (if_statement condition: (identifier) consequence: (block (return_statement (expression_list (identifier) (identifier) (identifier) (identifier)))) alternative: (else_clause body: (block (if_statement condition: (identifier) (comment) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (comment) (expression_statement (assignment left: (identifier) right: (identifier))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (integer))) body: (block (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (continue_statement))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (integer) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (list (identifier)))) (expression_statement (assignment left: (identifier) right: (list (identifier)))) (expression_statement (assignment left: (identifier) right: (list (identifier)))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (integer))) body: (block (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (comment) (identifier) (identifier) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (integer)) (identifier))))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (none) subscript: (slice))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (none) subscript: (slice))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (none) subscript: (ellipsis))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (none) subscript: (slice))) (keyword_argument name: (identifier) value: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (none) subscript: (ellipsis))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (none) subscript: (ellipsis))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (true)) (keyword_argument name: (identifier) value: (true)))))) (comment) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (integer))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (integer))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (integer))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (integer)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (integer)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (integer)))))) (expression_statement (assignment left: (identifier) right: (list))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (integer))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (integer))))) (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (comment) (subscript value: (identifier) subscript: (call function: (identifier) arguments: (argument_list (identifier)))) (subscript value: (identifier) subscript: (call function: (identifier) arguments: (argument_list (identifier)))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (integer)) (identifier))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (tuple (float) (float)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (tuple (float) (float)) (keyword_argument name: (identifier) value: (integer)))))) (import_statement name: (aliased_import name: (dotted_name (identifier) (identifier)) alias: (identifier))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) (keyword_argument name: (identifier) value: (float))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)))) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))))) (return_statement (identifier))))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (float))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer) (integer))))) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (return_statement (identifier)))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (false)) (default_parameter name: (identifier) value: (true))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer)))))))) (expression_statement (assignment left: (identifier) right: (list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (identifier)))) (if_statement condition: (identifier) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)))) attribute: (identifier)) arguments: (argument_list (integer) (integer))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier))))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (slice)) right: (identifier))) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))) (return_statement (identifier))) alternative: (else_clause body: (block (return_statement (identifier)))))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (slice) subscript: (integer)))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (unary_operator argument: (identifier)) right: (subscript value: (identifier) subscript: (slice) subscript: (integer)))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier)))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (none)) right: (parenthesized_expression (binary_operator left: (float) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (none))) right: (subscript value: (parenthesized_expression (binary_operator left: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) subscript: (none) subscript: (slice)) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) subscript: (slice) subscript: (none)))) subscript: (none) subscript: (slice) subscript: (slice)))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (slice)))) right: (float)) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (none)) right: (parenthesized_expression (binary_operator left: (float) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (slice) subscript: (none))) right: (parenthesized_expression (binary_operator left: (identifier) right: (subscript value: (identifier) subscript: (slice) subscript: (none)))))))))))) (return_statement (identifier))))) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (false))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (if_statement condition: (comparison_operator (string (string_start) (string_content) (string_end)) (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier)))))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (identifier)))))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (raise_statement (identifier)) (comment) (comment) (comment) (comment)) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (tuple (tuple (integer) (integer)) (tuple (integer) (integer)) (tuple (integer) (integer)))))))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer))) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))))))) (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (false) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (integer))) (while_statement condition: (true) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none) subscript: (none)))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (identifier)))))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))))) (if_statement condition: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (raise_statement (identifier)) (comment) (comment))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))))))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (comment) (comment) (comment) (comment) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (slice) subscript: (slice (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) subscript: (slice (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (slice)) right: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (integer) (integer)))))) right: (subscript value: (identifier) subscript: (slice) subscript: (slice) subscript: (none))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (slice) subscript: (none) subscript: (slice)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none) subscript: (none))) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none))) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none)))))))) (expression_statement (assignment left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none) subscript: (none))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none) subscript: (none))) right: (identifier)) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier))) right: (binary_operator left: (identifier) right: (identifier))))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none))) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (unary_operator argument: (identifier)) (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (float) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier) (binary_operator left: (identifier) right: (identifier))))) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (unary_operator argument: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (unary_operator argument: (identifier)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (float)) (keyword_argument name: (identifier) value: (unary_operator argument: (integer))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (subscript value: (identifier) subscript: (slice) subscript: (integer) subscript: (integer))) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator argument: (float)) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (subscript value: (identifier) subscript: (slice) subscript: (integer) subscript: (integer))) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (subscript value: (identifier) subscript: (slice) subscript: (integer) subscript: (integer)))) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)) right: (subscript value: (identifier) subscript: (slice) subscript: (integer) subscript: (integer))) right: (identifier))) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (integer)))) right: (identifier)) right: (identifier))) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (integer)))) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (float))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (float))) (keyword_argument name: (identifier) value: (float)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (subscript value: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (integer) (integer))) right: (subscript value: (identifier) subscript: (slice) subscript: (none)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (none)))) subscript: (slice) subscript: (slice) subscript: (integer)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (integer) (integer))) (binary_operator left: (identifier) right: (integer)) (identifier))))) (comment) (if_statement condition: (boolean_operator left: (parenthesized_expression (comparison_operator (identifier) (integer))) right: (identifier)) consequence: (block (expression_statement (assignment left: (identifier) right: (comparison_operator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (identifier)))) (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (unary_operator argument: (identifier))) right: (identifier))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (true))))))))) (if_statement condition: (comparison_operator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (unary_operator argument: (identifier)))) (integer)) consequence: (block (break_statement))) (expression_statement (augmented_assignment left: (identifier) right: (integer))) (if_statement condition: (comparison_operator (identifier) (identifier)) consequence: (block (break_statement))))) (return_statement (expression_list (identifier) (identifier) (identifier) (identifier) (identifier))))) (comment) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (string (string_start) (string_content) (string_end))) (default_parameter name: (identifier) value: (true)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (tuple (none) (none))) (default_parameter name: (identifier) value: (string (string_start) (string_content) (string_end))) (default_parameter name: (identifier) value: (false))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (comment) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer)))))))) (if_statement condition: (identifier) consequence: (block (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (true)))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (float)))))) (comment)) alternative: (elif_clause condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) (comment) (comment) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (float)))))))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (pattern_list (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (integer)))) (subscript value: (identifier) subscript: (ellipsis) subscript: (none)) (identifier)))))) (with_statement (with_clause (with_item value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (subscript value: (identifier) subscript: (identifier))) right: (identifier))))) (comment) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (identifier)))))) (comment) (if_statement condition: (boolean_operator left: (parenthesized_expression (comparison_operator (subscript value: (identifier) subscript: (integer)) (none))) right: (parenthesized_expression (comparison_operator (subscript value: (identifier) subscript: (integer)) (none)))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (integer))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (integer))))))))) (return_statement (identifier))))))