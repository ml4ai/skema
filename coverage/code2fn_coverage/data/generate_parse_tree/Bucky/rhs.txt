(module (expression_statement (string (string_start) (string_content) (string_end))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier) (identifier))) name: (dotted_name (identifier))) (comment) (comment) (comment) (comment) (decorated_definition (decorator (identifier)) (decorator (call function: (identifier) arguments: (argument_list (list (integer) (integer))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (if_statement condition: (boolean_operator left: (attribute object: (identifier) attribute: (identifier)) right: (attribute object: (identifier) attribute: (identifier))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))) (attribute object: (identifier) attribute: (identifier)))))) (comment)) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (none)))))) (comment) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (if_statement condition: (call function: (identifier) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)))) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (identifier)) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (comment) (if_statement condition: (attribute object: (identifier) attribute: (identifier)) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (subscript value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) subscript: (identifier)) right: (identifier))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (comment) (comment) (comment) (comment) (comment) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (integer)))) right: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (integer)))))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (parenthesized_expression (binary_operator left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) attribute: (identifier)) subscript: (integer))))) (expression_statement (augmented_assignment left: (identifier) right: (identifier))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (binary_operator left: (unary_operator argument: (identifier)) right: (parenthesized_expression (identifier))))) (comment) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (identifier))) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer))) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer)))))))) (comment) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (binary_operator left: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (identifier))) right: (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer))) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer)))))))) (comment) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (float) right: (binary_operator left: (identifier) right: (identifier))))) right: (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer))) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer)))))))) (comment) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer))) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer)))))))) (comment) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (binary_operator left: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer))) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (integer)))))))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (binary_operator left: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer))) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))))) right: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (identifier))) right: (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer))))))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (binary_operator left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer)))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (return_statement (identifier))))))