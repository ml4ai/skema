(module (expression_statement (string (string_start) (string_content) (string_end))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (float)))) right: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (float)))) right: (float)))) (return_statement (binary_operator left: (identifier) right: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (float)))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier)))) right: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (binary_operator left: (parenthesized_expression (binary_operator left: (float) right: (binary_operator left: (binary_operator left: (binary_operator left: (float) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (float)))) right: (parenthesized_expression (binary_operator left: (identifier) right: (identifier)))))) right: (parenthesized_expression (unary_operator argument: (identifier))))))) (return_statement (binary_operator left: (identifier) right: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (float)) right: (identifier)) right: (parenthesized_expression (binary_operator left: (identifier) right: (float))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (float) right: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (float) right: (identifier))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (binary_operator left: (float) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (return_statement (identifier))))))