(module (expression_statement (string (string_start) (string_content) (string_end))) (import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (comment) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true))))) definition: (class_definition name: (identifier) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) type: (type (identifier)))) (expression_statement (assignment left: (identifier) type: (type (identifier)))) (expression_statement (assignment left: (identifier) type: (type (identifier)))) (comment) (expression_statement (assignment left: (identifier) type: (type (identifier)))) (comment) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) right: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (if_statement condition: (comparison_operator (string (string_start) (string_content) (string_end)) (attribute object: (identifier) attribute: (identifier))) consequence: (block (expression_statement (assignment left: (identifier) right: (attribute object: (call function: (identifier) arguments: (argument_list (identifier) (attribute object: (identifier) attribute: (identifier)))) attribute: (identifier)))) (if_statement condition: (comparison_operator (identifier) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (identifier)))) (raise_statement (identifier)))))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (list_comprehension body: (attribute object: (identifier) attribute: (identifier)) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier)))) (if_clause (comparison_operator (attribute object: (identifier) attribute: (identifier)) (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))))))) (return_statement (parenthesized_expression (string (string_start) (interpolation expression: (identifier)) (string_content) (interpolation expression: (subscript value: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) subscript: (integer))) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_end)))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (attribute object: (identifier) attribute: (identifier))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (attribute object: (identifier) attribute: (identifier))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer))))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (decorated_definition (decorator (identifier)) (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (typed_parameter (identifier) type: (type (identifier))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (default_parameter name: (identifier) value: (tuple (none) (none))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier)))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (identifier)) value: (string (string_start) (string_content) (string_end))) (typed_default_parameter name: (identifier) type: (type (identifier)) value: (string (string_start) (string_content) (string_end))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier)) (type (identifier))))) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (list (identifier) (identifier))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)))))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (attribute object: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (subscript value: (identifier) subscript: (identifier))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))) attribute: (identifier)))))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (assignment left: (identifier) right: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (call function: (attribute object: (call function: (attribute object: (subscript value: (identifier) subscript: (identifier)) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (float))) attribute: (identifier)))) attribute: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))))) (return_statement (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (conditional_expression (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (comparison_operator (identifier) (none)) (identifier)))) (expression_statement (assignment left: (identifier) right: (dictionary_comprehension body: (pair key: (attribute object: (identifier) attribute: (identifier)) value: (call function: (identifier) arguments: (argument_list (identifier) (attribute object: (identifier) attribute: (identifier))))) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier)))) (if_clause (comparison_operator (attribute object: (identifier) attribute: (identifier)) (tuple (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) right: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) subscript: (ellipsis) subscript: (none)) (identifier))))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_end)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) subscript: (none) subscript: (ellipsis)) (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (dictionary_comprehension body: (pair key: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (for_in_clause left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (call function: (attribute object: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) attribute: (identifier)) arguments: (argument_list)))) (return_statement (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (identifier) (string (string_start) (string_content) (string_end))))) attribute: (identifier)) arguments: (argument_list))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (true))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (dictionary_splat_pattern (identifier))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (call function: (identifier) arguments: (argument_list (identifier) (dictionary_splat (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (typed_parameter (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier)) (type (identifier))))))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (comparison_operator (call function: (identifier) arguments: (argument_list (identifier))) (identifier)) (comment) consequence: (block (if_statement condition: (comparison_operator (subscript value: (identifier) subscript: (slice (integer))) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) subscript: (unary_operator argument: (integer)))))))) alternative: (else_clause body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (raise_statement (identifier))))))) (comment) (if_statement condition: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier))) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (raise_statement (identifier)))) (if_statement condition: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier))) consequence: (block (return_statement (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (subscript value: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) subscript: (identifier)) attribute: (identifier)) subscript: (attribute object: (subscript value: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) subscript: (attribute object: (identifier) attribute: (identifier))) attribute: (identifier))))) (expression_statement (assignment left: (identifier) right: (attribute object: (subscript value: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) subscript: (identifier)) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (attribute object: (identifier) attribute: (identifier))) (pair key: (string (string_start) (string_content) (string_end)) value: (attribute object: (identifier) attribute: (identifier)))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (if_statement condition: (comparison_operator (string (string_start) (string_content) (string_end)) (attribute object: (identifier) attribute: (identifier))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (attribute object: (identifier) attribute: (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (attribute object: (identifier) attribute: (identifier))) right: (attribute object: (identifier) attribute: (identifier)))))))) (return_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (dictionary_splat (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (if_statement condition: (comparison_operator (string (string_start) (string_content) (string_end)) (attribute object: (identifier) attribute: (identifier))) consequence: (block (expression_statement (assignment left: (identifier) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (if_statement condition: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (unary_operator argument: (identifier)))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (unary_operator argument: (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier))) (string_content) (interpolation expression: (identifier)) (string_content) (string_end))))) (raise_statement (identifier))))))))))))) (function_definition name: (identifier) parameters: (parameters (typed_parameter (identifier) type: (type (attribute object: (identifier) attribute: (identifier)))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier)))))) (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier))))))))) value: (tuple (none) (none))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier)))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (if_statement condition: (comparison_operator (subscript value: (identifier) subscript: (integer)) (none)) consequence: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer)) right: (subscript value: (identifier) subscript: (integer)))))) (if_statement condition: (comparison_operator (subscript value: (identifier) subscript: (integer)) (none)) consequence: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer)) right: (subscript value: (identifier) subscript: (unary_operator argument: (integer))))))) (comment) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (subscript value: (identifier) subscript: (integer)) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (integer))) right: (integer)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer)) right: (subscript value: (identifier) subscript: (unary_operator argument: (parenthesized_expression (binary_operator left: (identifier) right: (integer))))))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (if_statement condition: (comparison_operator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (raise_statement (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer)) right: (identifier))))) (comment) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer)) right: (binary_operator left: (subscript value: (identifier) subscript: (unary_operator argument: (integer))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (integer)))))))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (comparison_operator (identifier) (subscript value: (identifier) subscript: (integer)))) right: (parenthesized_expression (comparison_operator (identifier) (subscript value: (identifier) subscript: (integer))))))) (return_statement (identifier)))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true)) (keyword_argument name: (identifier) value: (false))))) definition: (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (none)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (none)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer))))))))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer))))))))) (expression_statement (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (typed_parameter (identifier) type: (type (identifier))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (default_parameter name: (identifier) value: (tuple (none) (none))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier)))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier)))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (identifier))) (return_statement (call function: (identifier) arguments: (argument_list (integer) (dictionary_splat (identifier))))))))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true)) (keyword_argument name: (identifier) value: (false))))) definition: (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (comment) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (typed_parameter (identifier) type: (type (identifier))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (default_parameter name: (identifier) value: (tuple (none) (none))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier)))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier)))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (identifier))) (return_statement (call function: (identifier) arguments: (argument_list (integer) (dictionary_splat (identifier))))))))))) (comment) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true)) (keyword_argument name: (identifier) value: (false))))) definition: (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true))))))))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true)) (keyword_argument name: (identifier) value: (false))))) definition: (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (expression_statement (assignment left: (identifier) type: (type (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (true)) (pair key: (string (string_start) (string_content) (string_end)) value: (true)))))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (typed_parameter (identifier) type: (type (identifier))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (default_parameter name: (identifier) value: (tuple (none) (none))) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (attribute object: (identifier) attribute: (identifier)))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier)))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (identifier))) (return_statement (call function: (identifier) arguments: (argument_list (integer) (dictionary_splat (identifier))))))))))))