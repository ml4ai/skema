(module (expression_statement (string (string_start) (string_content) (string_end))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier))) (expression_statement (assignment left: (identifier) right: (float))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (none)) body: (block (pass_statement))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (pass_statement))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none))) return_type: (type (none)) body: (block (assert_statement (boolean_operator left: (comparison_operator (identifier) (none)) right: (comparison_operator (identifier) (none))) (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (dictionary (pair key: (tuple (identifier) (identifier)) value: (string (string_start) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_content) (string_end))) (pair key: (tuple (none) (identifier)) value: (string (string_start) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_end))) (pair key: (tuple (identifier) (none)) value: (string (string_start) (string_content) (interpolation expression: (attribute object: (identifier) attribute: (identifier))) (string_end)))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (string_end))))))) (if_statement condition: (boolean_operator left: (parenthesized_expression (boolean_operator left: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) right: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier))))) (line_continuation) right: (parenthesized_expression (boolean_operator left: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) right: (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier)))))) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (tuple (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier))))) (string_content) (string_end))))))))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none)) (typed_default_parameter name: (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))) value: (none))) return_type: (type (none)) body: (block (expression_statement (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (return_statement (none)))) (expression_statement (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier)))))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (none)) body: (block (pass_statement))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (string_end))))))) (if_statement condition: (boolean_operator left: (comparison_operator (float) (identifier)) right: (comparison_operator (identifier) (float))) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_content) (string_end))))))))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (none)) body: (block (pass_statement))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (string_end))))))) (if_statement condition: (not_operator argument: (call function: (identifier) arguments: (argument_list (identifier) (tuple (identifier))))) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_content) (string_end))))))))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (none)) body: (block (expression_statement (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (return_statement (none)))) (expression_statement (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier)))))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (function_definition name: (identifier) parameters: (parameters (identifier)) return_type: (type (none)) body: (block (pass_statement))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (string_end))))))) (expression_statement (call function: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (call function: (identifier) arguments: (argument_list)) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (identifier) right: (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))))))))