(module (expression_statement (string (string_start) (string_content) (string_end))) (future_import_statement name: (dotted_name (identifier))) (import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (relative_import (import_prefix) (dotted_name (identifier))) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (tuple (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))))) (class_definition name: (identifier) superclasses: (argument_list (identifier)) body: (block (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (keyword_separator) (typed_parameter (identifier) type: (type (identifier))) (typed_parameter (identifier) type: (type (identifier)))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (identifier))))) (return_statement (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))) (class_definition name: (identifier) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier) (dictionary_splat_pattern (identifier))) body: (block (expression_statement (assignment left: (identifier) right: (integer))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier)))) (expression_statement (augmented_assignment left: (identifier) right: (identifier))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (boolean_operator left: (comparison_operator (identifier) (string (string_start) (string_end))) right: (comparison_operator (identifier) (identifier))) consequence: (block (return_statement (none)))) (return_statement (call function: (identifier) arguments: (argument_list (identifier)))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (true))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (boolean_operator left: (comparison_operator (identifier) (string (string_start) (string_end))) right: (comparison_operator (identifier) (identifier))) consequence: (block (if_statement condition: (identifier) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (string_end))))))) (return_statement (none)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (if_statement condition: (boolean_operator left: (comparison_operator (identifier) (none)) right: (comparison_operator (identifier) (identifier))) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_content) (string_end))))))) (if_statement condition: (boolean_operator left: (comparison_operator (identifier) (none)) right: (comparison_operator (identifier) (identifier))) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_content) (string_end))))))) (return_statement (identifier)))) (return_statement (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier)) (pair key: (string (string_start) (string_content) (string_end)) value: (identifier))))) (expression_statement (assignment left: (identifier) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end))) (pair key: (string (string_start) (string_content) (string_end)) value: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (tuple (tuple (string (string_start) (string_content) (string_end)) (identifier) (none) (comment) (none) (comment) (false) (comment)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (none) (none) (false)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (none) (none) (false)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (float) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (float) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (float) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (none) (none) (false)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (integer) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (float) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (integer) (none) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (float) (float) (true)) (tuple (string (string_start) (string_content) (string_end)) (identifier) (none) (none) (false))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))))))) (class_definition name: (identifier) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_end))))))) (for_statement left: (pattern_list (identifier) (identifier) (identifier) (identifier) (identifier)) right: (identifier) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (if_statement condition: (comparison_operator (identifier) (identifier)) (comment) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))))) alternative: (else_clause (comment) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier)))) (keyword_argument name: (identifier) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))))))))) (return_statement (identifier))))) (decorated_definition (decorator (identifier)) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (typed_parameter (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier)) (type (identifier)))))) (typed_parameter (identifier) type: (type (generic_type (identifier) (type_parameter (type (identifier))))))) return_type: (type (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (attribute object: (identifier) attribute: (identifier))))) (with_statement (with_clause (with_item value: (as_pattern (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (string (string_start) (string_content) (string_end)))) alias: (as_pattern_target (identifier))))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list)) (identifier)))))))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (delete_statement (attribute object: (identifier) attribute: (identifier))) (return_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (dictionary_splat (call function: (identifier) arguments: (argument_list (identifier)))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (dictionary_splat_pattern (identifier))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (comment) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (none))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (false))) (expression_statement (assignment left: (identifier) right: (dictionary))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (if_statement condition: (comparison_operator (identifier) (identifier)) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (interpolation expression: (identifier)) (string_end))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (try_statement body: (block (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)))))) (except_clause (as_pattern (identifier) alias: (as_pattern_target (identifier))) (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (interpolation expression: (identifier)) (string_content) (interpolation expression: (identifier)) (string_content (escape_sequence)) (interpolation expression: (identifier)) (string_content (escape_sequence)) (string_end)))))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier)))))) (if_statement condition: (boolean_operator left: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) right: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none))) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end))))))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))))) (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (pair key: (string (string_start) (string_content) (string_end)) value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (attribute object: (identifier) attribute: (identifier))) (pair key: (string (string_start) (string_content) (string_end)) value: (attribute object: (identifier) attribute: (identifier))) (pair key: (string (string_start) (string_content) (string_end)) value: (attribute object: (identifier) attribute: (identifier)))))))))))