(module (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (float))) (comment) (comment) (comment) (comment) (comment) (comment) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (identifier) (identifier)) (false))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (comment) (comment) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) (comment) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (comparison_operator (identifier) (identifier)))))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (slice) subscript: (integer)))) (comment) (comment) (comment) (comment) (comment) (expression_statement (assignment left: (identifier) right: (identifier))) (if_statement condition: (comparison_operator (call function: (identifier) arguments: (argument_list (identifier))) (identifier)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end))))))) (comment) (assert_statement (parenthesized_expression (comparison_operator (identifier) (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (keyword_argument name: (identifier) value: (false)))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (assignment left: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier)) right: (true))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (identifier)) right: (integer))))))) (comment) (expression_statement (assignment left: (identifier) right: (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))) (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (identifier))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (false))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) (comment) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list_comprehension body: (boolean_operator left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier))) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))))))) (comment) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) (comment) (comment) body: (block (if_statement condition: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list_comprehension body: (boolean_operator left: (subscript value: (identifier) subscript: (identifier)) right: (not_operator argument: (parenthesized_expression (subscript value: (subscript value: (identifier) subscript: (identifier)) subscript: (identifier))))) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) consequence: (block (expression_statement (augmented_assignment left: (identifier) right: (integer))))))) (return_statement (parenthesized_expression (binary_operator left: (identifier) right: (identifier)))))))