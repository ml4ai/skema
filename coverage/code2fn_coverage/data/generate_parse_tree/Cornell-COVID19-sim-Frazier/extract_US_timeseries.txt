(module (import_statement name: (dotted_name (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) right: (call function: (identifier) arguments: (argument_list (identifier)))))) (expression_statement (assignment left: (identifier) right: (list))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) right: (string (string_start) (string_content) (string_end))))) (if_statement condition: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))) consequence: (block (continue_statement))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (identifier)) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (list (identifier)) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer))) (keyword_argument name: (identifier) value: (attribute object: (identifier) attribute: (identifier))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (false)) (keyword_argument name: (identifier) value: (false))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (return_statement (call function: (attribute object: (string (string_start) (string_content) (string_end)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (call function: (attribute object: (string (string_start) (string_content) (string_end)) attribute: (identifier)) arguments: (argument_list (binary_operator left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))))) (keyword_argument name: (identifier) value: (identifier))))))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier) (identifier) (string (string_start) (string_content) (string_end))))))))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier) (identifier) (string (string_start) (string_content) (string_end))))))))))