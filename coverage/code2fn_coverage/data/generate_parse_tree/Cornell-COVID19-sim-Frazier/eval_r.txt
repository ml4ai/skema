(module (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (expression_statement (assignment left: (identifier) right: (list (float) (float) (float) (float) (float) (float) (float)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier)) (comment) (comment) (comment) (comment) (comment) (comment) (comment) body: (block (assert_statement (parenthesized_expression (comparison_operator (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) right: (integer)))) (float)))) (expression_statement (assignment left: (identifier) right: (integer))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (integer))) right: (subscript value: (identifier) subscript: (identifier))))))) (expression_statement (assignment left: (identifier) right: (integer))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (integer))) right: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (integer) right: (identifier))))) right: (binary_operator left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (integer) right: (identifier))) right: (parenthesized_expression (binary_operator left: (identifier) right: (integer)))))))) right: (subscript value: (identifier) subscript: (identifier))) right: (identifier)))))) (return_statement (binary_operator left: (identifier) right: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (identifier)) (default_parameter name: (identifier) value: (float))) body: (block (return_statement (call function: (identifier) arguments: (argument_list (identifier) (float) (keyword_argument name: (identifier) value: (tuple (identifier) (identifier) (identifier)))))))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier) (float))))))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier) (float))))))))))))