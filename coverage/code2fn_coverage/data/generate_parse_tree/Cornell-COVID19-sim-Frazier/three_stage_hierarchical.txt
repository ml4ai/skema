(module (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (integer)) (default_parameter name: (identifier) value: (float))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) body: (block (expression_statement (assignment left: (identifier) right: (comparison_operator (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))) (identifier)))) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (slice (integer) (identifier))))))) (if_statement condition: (not_operator argument: (parenthesized_expression (identifier))) consequence: (block (return_statement (binary_operator left: (identifier) right: (identifier))) (comment))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (binary_operator left: (identifier) right: (identifier)))))) (expression_statement (augmented_assignment left: (identifier) right: (identifier))) (comment) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (identifier) arguments: (argument_list (binary_operator left: (identifier) right: (identifier)) (identifier))) right: (integer)))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (slice (identifier) (identifier))))))) (if_statement condition: (identifier) (comment) consequence: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (integer)))))))) (return_statement (binary_operator left: (identifier) right: (identifier))))))