(module (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (dotted_name (identifier) (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_from_statement module_name: (relative_import (import_prefix)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (identifier))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator argument: (identifier)) right: (identifier)) right: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (identifier)) right: (binary_operator left: (identifier) right: (identifier))))) (return_statement (list (identifier) (identifier))))) (return_statement (identifier)))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (list (identifier)))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (integer) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier) (subscript value: (identifier) subscript: (list (integer) (unary_operator argument: (integer)))) (list (identifier) (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (return_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier))))))))))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (import_statement name: (aliased_import name: (dotted_name (identifier) (identifier)) alias: (identifier))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))))