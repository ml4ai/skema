(module (import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (dictionary))) (for_statement left: (identifier) right: (attribute object: (identifier) attribute: (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (if_statement condition: (boolean_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) consequence: (block (if_statement condition: (call function: (identifier) arguments: (argument_list (identifier) (identifier))) consequence: (block (expression_statement (assignment left: (identifier) right: (list_comprehension body: (tuple (identifier) (binary_operator left: (identifier) right: (integer))) (for_in_clause left: (pattern_list (identifier) (identifier)) right: (identifier)))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))))) (return_statement (identifier)))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (identifier)))))) definition: (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (list_comprehension body: (call function: (identifier) arguments: (argument_list (identifier))) (for_in_clause left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))))))))))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (identifier))) (return_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (identifier)))))) definition: (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (list_comprehension body: (call function: (identifier) arguments: (argument_list (identifier))) (for_in_clause left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))))))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (list_comprehension body: (call function: (identifier) arguments: (argument_list (identifier))) (for_in_clause left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list_comprehension body: (tuple (attribute object: (identifier) attribute: (identifier)) (identifier) (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier))) (for_in_clause left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (for_in_clause left: (identifier) right: (call function: (identifier) arguments: (argument_list (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) (binary_operator left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (integer)) right: (integer)))))) (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))))))) (comment) (comment) (comment) (comment) (return_statement (identifier))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end))))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (list))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (integer) (binary_operator left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (integer)))) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (integer)))) (if_statement condition: (comparison_operator (identifier) (integer)) consequence: (block (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (tuple (binary_operator left: (identifier) right: (integer)) (binary_operator left: (binary_operator left: (identifier) right: (integer)) right: (integer))))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (return_statement (identifier))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (identifier) (identifier)))))) definition: (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)))) (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (lambda parameters: (lambda_parameters (identifier)) body: (subscript value: (identifier) subscript: (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list)))) (return_statement (identifier))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (keyword_argument name: (identifier) value: (list (identifier) (identifier))) (keyword_argument name: (identifier) value: (list (attribute object: (identifier) attribute: (identifier))))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (integer))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (identifier) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (list_comprehension body: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (for_in_clause left: (identifier) right: (identifier))))))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (list (string (string_start) (string_content) (string_end))))) (keyword_argument name: (identifier) value: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (tuple (identifier) (call function: (identifier) arguments: (argument_list (identifier))) (call function: (identifier) arguments: (argument_list (identifier)))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (parenthesized_expression (binary_operator left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)))))) attribute: (identifier)) arguments: (argument_list)))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier))) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier) subscript: (identifier) subscript: (slice)) right: (subscript value: (identifier) subscript: (identifier)))))) (expression_statement (assignment left: (identifier) right: (dictionary_comprehension body: (pair key: (identifier) value: (call function: (attribute object: (subscript value: (identifier) subscript: (identifier)) attribute: (identifier)) arguments: (argument_list))) (for_in_clause left: (identifier) right: (identifier))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (subscript value: (identifier) subscript: (identifier)))))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (identifier)))) (assert_statement (comparison_operator (identifier) (attribute object: (identifier) attribute: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (conditional_expression (binary_operator left: (binary_operator left: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) right: (integer)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (integer)))) (if_statement condition: (false) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list)))))) (if_statement condition: (identifier) consequence: (block (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list)) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (tuple (identifier) (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (integer))))))))))))) (if_statement condition: (false) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content (escape_sequence)) (string_end)) right: (identifier)))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (for_statement left: (identifier) right: (tuple (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (subscript value: (identifier) subscript: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (for_statement left: (identifier) right: (subscript value: (identifier) subscript: (identifier)) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (identifier))) right: (integer)))))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))))))) (if_statement condition: (false) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (integer) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (integer) (integer) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (identifier))))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (identifier))))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (identifier))))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (string (string_start) (string_content) (string_end)))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier)))) right: (integer))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier)))) right: (integer))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (binary_operator left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier)))) right: (integer))))) (comment) (comment) (comment) (comment))) (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (identifier)) right: (identifier))) (expression_statement (assignment left: (identifier) right: (identifier))) (if_statement condition: (boolean_operator left: (comparison_operator (identifier) (none)) right: (parenthesized_expression (boolean_operator left: (comparison_operator (binary_operator left: (identifier) right: (identifier)) (integer)) right: (comparison_operator (identifier) (binary_operator left: (call function: (identifier) arguments: (argument_list (identifier))) right: (integer)))))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (if_statement condition: (not_operator argument: (identifier)) consequence: (block (raise_statement (call function: (identifier) arguments: (argument_list))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (if_statement condition: (false) consequence: (block (import_statement name: (dotted_name (identifier))) (import_statement name: (dotted_name (identifier))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (call function: (identifier) arguments: (argument_list)) (call function: (identifier) arguments: (argument_list)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (list (identifier) (identifier) (identifier)) (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))))) (keyword_argument name: (identifier) value: (list (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (return_statement (expression_list (identifier) (identifier)))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (binary_operator left: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) (keyword_argument name: (identifier) value: (list (identifier))) (keyword_argument name: (identifier) value: (list (attribute object: (identifier) attribute: (identifier))))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (list (integer)) right: (parenthesized_expression (binary_operator left: (identifier) right: (integer)))) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (integer) (binary_operator left: (identifier) right: (integer))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list))) (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (list_comprehension body: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))) (for_in_clause left: (identifier) right: (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (if_statement condition: (comparison_operator (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (integer)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (identifier) (identifier))))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))) (keyword_argument name: (identifier) value: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (subscript value: (identifier) subscript: (comparison_operator (identifier) (integer))) attribute: (identifier)) arguments: (argument_list)))) (return_statement (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))))) (if_statement condition: (true) consequence: (block (expression_statement (augmented_assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (for_statement left: (pattern_list (identifier) (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) (comment) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (tuple (identifier) (identifier)))))))) (import_statement name: (aliased_import name: (dotted_name (identifier) (identifier)) alias: (identifier))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (tuple (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))) (return_statement (identifier))))) (decorated_definition (decorator (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (list (identifier)))))) definition: (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (with_statement (with_clause (with_item value: (call function: (identifier) arguments: (argument_list)))) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier)))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (identifier))))) (return_statement (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (for_statement left: (identifier) right: (identifier) body: (block (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (identifier)) consequence: (block (break_statement)))) alternative: (else_clause body: (block (raise_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)))))))) (with_statement (with_clause (with_item value: (call function: (identifier) arguments: (argument_list)))) body: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))))) (expression_statement (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))) (with_statement (with_clause (with_item value: (as_pattern (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (integer)))) alias: (as_pattern_target (identifier))))) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier) (call function: (identifier) arguments: (argument_list (integer))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (attribute object: (identifier) attribute: (identifier)))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (attribute object: (identifier) attribute: (identifier))) (keyword_argument name: (identifier) value: (false))))) (return_statement (identifier)))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) consequence: (block (if_statement condition: (false) consequence: (block (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (with_statement (with_clause (with_item value: (call function: (identifier) arguments: (argument_list)))) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (integer)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (call function: (identifier) arguments: (argument_list))))))) (if_statement condition: (false) consequence: (block (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list))))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))))) (expression_statement (call function: (identifier) arguments: (argument_list (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (list (float) (float) (float)))))))))) (expression_statement (call function: (identifier) arguments: (argument_list))))) (if_statement condition: (false) consequence: (block (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (integer)))) (expression_statement (call function: (identifier) arguments: (argument_list))))) (if_statement condition: (true) consequence: (block (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (identifier))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end))))) (for_statement left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) subscript: (unary_operator argument: (integer))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (attribute object: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list))))) (for_statement left: (identifier) right: (identifier) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (subscript value: (identifier) subscript: (identifier))))))) (for_statement left: (identifier) right: (list (string (string_start) (string_content) (string_end))) body: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (subscript value: (identifier) subscript: (identifier))))))) (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (integer))) (for_statement left: (identifier) right: (attribute object: (identifier) attribute: (identifier)) body: (block (if_statement condition: (comparison_operator (string (string_start) (string_content) (string_end)) (identifier)) consequence: (block (expression_statement (augmented_assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))))))) (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (identifier)))) (if_statement condition: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) consequence: (block (expression_statement (augmented_assignment left: (identifier) right: (binary_operator left: (string (string_start) (string_content) (string_end)) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end)))))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (return_statement (true)))) (with_statement (with_clause (with_item value: (call function: (identifier) arguments: (argument_list)))) (comment) body: (block (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (pattern_list (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (true)))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))))) (if_statement condition: (false) consequence: (block (import_statement name: (dotted_name (identifier))) (import_statement name: (dotted_name (identifier))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)) (call function: (identifier) arguments: (argument_list)) (call function: (identifier) arguments: (argument_list)) (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (call function: (attribute object: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list)))) alternative: (else_clause body: (block (expression_statement (call function: (identifier) arguments: (argument_list)))))))))) (if_statement condition: (false) consequence: (block (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (with_statement (with_clause (with_item value: (call function: (identifier) arguments: (argument_list)))) body: (block (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (integer)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (true)))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))))))))))