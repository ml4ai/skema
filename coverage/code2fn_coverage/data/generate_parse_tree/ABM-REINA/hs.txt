(module (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))) (string (string_start) (string_content) (string_end))))) subscript: (string (string_start) (string_content) (string_end))) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (attribute object: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end))))) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (call function: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list (integer))) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list (identifier))))) (return_statement (identifier)) (expression_statement (string (string_start) (string_content) (string_end))))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (subscript value: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (attribute object: (identifier) attribute: (identifier)) right: (attribute object: (attribute object: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)))) attribute: (identifier)) attribute: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end)))))))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))))) (return_statement (identifier)))) (if_statement condition: (comparison_operator (identifier) (string (string_start) (string_content) (string_end))) (comment) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (none))) (expression_statement (assignment left: (identifier) right: (none))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (if_statement condition: (false) consequence: (block (expression_statement (assignment left: (identifier) right: (string (string_start) (string_content) (string_end)))) (expression_statement (assignment left: (identifier) right: (float)))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (none)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (subscript value: (identifier) subscript: (comparison_operator (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (identifier))) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (subscript value: (subscript value: (identifier) subscript: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))) subscript: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (subscript value: (identifier) subscript: (comparison_operator (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (identifier))) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (subscript value: (subscript value: (identifier) subscript: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))) subscript: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (identifier)))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (subscript value: (subscript value: (identifier) subscript: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (identifier))) subscript: (list (string (string_start) (string_content) (string_end)) (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list)) attribute: (identifier)) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (identifier)))))) (if_statement condition: (not_operator argument: (identifier)) consequence: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier))))) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (identifier)))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (parenthesized_expression (binary_operator left: (identifier) right: (integer))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (call function: (identifier) arguments: (argument_list (identifier)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (comparison_operator (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (identifier))))) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list)))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (subscript value: (identifier) subscript: (comparison_operator (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (identifier))) attribute: (identifier)) arguments: (argument_list (string (string_start) (string_content) (string_end)))) attribute: (identifier)) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (comment) (expression_statement (augmented_assignment left: (identifier) right: (identifier))) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) right: (identifier))) (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (call function: (attribute object: (subscript value: (identifier) subscript: (comparison_operator (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))) (integer))) attribute: (identifier)) arguments: (argument_list (integer))) attribute: (identifier)) arguments: (argument_list (identifier))))) (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list)))))) (expression_statement (call function: (identifier) arguments: (argument_list))))))