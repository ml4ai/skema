(module (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (comment) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) (comment) body: (block (if_statement condition: (comparison_operator (identifier) (integer)) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (integer))) (comment)) alternative: (else_clause body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (float) right: (parenthesized_expression (binary_operator left: (float) right: (identifier)))) right: (float)))) (comment)))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (unary_operator argument: (identifier)) right: (identifier)) right: (identifier))) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)) right: (binary_operator left: (identifier) right: (identifier)))) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (identifier)))) (comment) (return_statement (tuple (identifier) (identifier) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (binary_operator left: (identifier) right: (identifier)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (identifier))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) (comment) body: (block (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (subscript value: (identifier) subscript: (identifier)))) (comment) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) (comment) body: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (augmented_assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (tuple_pattern (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))))) (comment) (expression_statement (augmented_assignment left: (identifier) right: (integer))) (comment))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (return_statement (tuple (identifier) (identifier) (identifier) (identifier))))) (function_definition name: (identifier) parameters: (parameters) body: (block (expression_statement (assignment left: (identifier) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (identifier) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (integer)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (list (float)) right: (identifier)))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (expression_statement (assignment left: (identifier) right: (integer))) (comment) (for_statement left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))) (comment) body: (block (expression_statement (assignment left: (identifier) right: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (float))) right: (float)))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (comment) (identifier) (identifier))))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (identifier)) right: (binary_operator left: (identifier) right: (identifier)))) (comment))) (expression_statement (assignment left: (tuple_pattern (identifier) (identifier) (identifier) (identifier)) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier) (identifier) (comment) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier) (identifier))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (expression_statement (call function: (identifier) arguments: (argument_list (binary_operator left: (string (string_start) (string_content) (string_end)) right: (call function: (identifier) arguments: (argument_list (identifier))))))))) (expression_statement (call function: (identifier) arguments: (argument_list))))