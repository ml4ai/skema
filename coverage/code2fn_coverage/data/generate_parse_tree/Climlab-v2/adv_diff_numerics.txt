(module (expression_statement (string (string_start) (string_content) (string_end))) (future_import_statement name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer))))) right: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer)))))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer))))) right: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer)))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer))))))))) right: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer)))))))) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (parenthesized_expression (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer))))))))) right: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (unary_operator argument: (integer)))))))) (return_statement (identifier)))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (return_statement (binary_operator left: (binary_operator left: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier))) right: (call function: (identifier) arguments: (argument_list (identifier) (identifier) (identifier) (identifier)))) right: (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (false))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer))))) (if_statement condition: (parenthesized_expression (comparison_operator (identifier) (none))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (if_statement condition: (parenthesized_expression (comparison_operator (identifier) (none))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (comment) (expression_statement (assignment left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))))))))) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))))))))) (expression_statement (assignment left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))))))) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))))))))) (expression_statement (assignment left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer))))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))))))))) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))))))))) (expression_statement (assignment left: (identifier) right: (parenthesized_expression (binary_operator left: (binary_operator left: (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer))))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))))))) right: (parenthesized_expression (binary_operator left: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer) (unary_operator argument: (integer)))))) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))))))))))) (if_statement condition: (identifier) (comment) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (tuple (integer) (identifier)))))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer) subscript: (slice (unary_operator argument: (integer)))) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer) subscript: (slice (integer))) right: (identifier))) (comment) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (integer) subscript: (slice (unary_operator argument: (integer)))) right: (identifier))) (comment) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (integer) subscript: (slice (integer))) right: (identifier))) (return_statement (identifier))) alternative: (else_clause (comment) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (binary_operator left: (list_comprehension body: (identifier) (for_in_clause left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (slice (unary_operator argument: (integer)))))) right: (list (identifier) (identifier))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (comment) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (tuple (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (unary_operator argument: (integer)))) (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (integer)))))) (expression_statement (assignment left: (identifier) right: (tuple (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (integer))) (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (unary_operator argument: (integer))))))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (subscript value: (identifier) subscript: (integer)) subscript: (subscript value: (identifier) subscript: (integer))) right: (identifier))) (comment) (expression_statement (assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (subscript value: (identifier) subscript: (integer)) subscript: (subscript value: (identifier) subscript: (integer))) right: (identifier))) (comment) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (unary_operator argument: (integer)))) subscript: (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (unary_operator argument: (integer))))) right: (identifier))) (comment) (expression_statement (augmented_assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (integer))) subscript: (subscript value: (subscript value: (identifier) subscript: (integer)) subscript: (slice (integer)))) right: (identifier))) (return_statement (identifier))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (parenthesized_expression (binary_operator left: (binary_operator left: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (integer) subscript: (slice)) (keyword_argument name: (identifier) value: (integer)))) right: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (integer) subscript: (slice (integer))) (keyword_argument name: (identifier) value: (integer))))) right: (call function: (identifier) arguments: (argument_list (subscript value: (identifier) subscript: (integer) subscript: (slice (unary_operator argument: (integer)))) (keyword_argument name: (identifier) value: (unary_operator argument: (integer)))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none)) (default_parameter name: (identifier) value: (none))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (parenthesized_expression (comparison_operator (identifier) (none))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (if_statement condition: (parenthesized_expression (comparison_operator (identifier) (none))) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (expression_statement (assignment left: (identifier) right: (identifier))) (return_statement (parenthesized_expression (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (binary_operator left: (unary_operator argument: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer)))) right: (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer))))))) right: (parenthesized_expression (binary_operator left: (identifier) right: (parenthesized_expression (binary_operator left: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (integer))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (slice (unary_operator argument: (integer))))))))) right: (identifier)))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (false))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))))) (comment) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (call function: (identifier) arguments: (argument_list (identifier) (subscript value: (identifier) subscript: (ellipsis) subscript: (identifier)))) right: (subscript value: (identifier) subscript: (ellipsis) subscript: (identifier))))) (comment) (return_statement (subscript value: (identifier) subscript: (ellipsis) subscript: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier) (identifier) (default_parameter name: (identifier) value: (false))) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (identifier) right: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (unary_operator argument: (integer))))) (if_statement condition: (identifier) consequence: (block (expression_statement (assignment left: (subscript value: (identifier) subscript: (integer) subscript: (slice)) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (identifier))))) (return_statement (call function: (identifier) arguments: (argument_list (tuple (integer) (integer)) (identifier) (identifier))))) alternative: (else_clause (comment) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (expression_statement (assignment left: (identifier) right: (binary_operator left: (float) right: (identifier)))) (expression_statement (assignment left: (subscript value: (identifier) subscript: (ellipsis) subscript: (subscript value: (identifier) subscript: (integer)) subscript: (subscript value: (identifier) subscript: (integer))) right: (float))) (comment) (expression_statement (assignment left: (identifier) right: (binary_operator left: (identifier) right: (binary_operator left: (identifier) right: (identifier))))) (return_statement (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))