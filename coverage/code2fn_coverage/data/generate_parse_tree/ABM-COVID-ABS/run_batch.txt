(module (import_from_statement module_name: (dotted_name (identifier) (identifier)) (wildcard_import)) (import_from_statement module_name: (dotted_name (identifier) (identifier)) (wildcard_import)) (import_from_statement module_name: (dotted_name (identifier) (identifier) (identifier)) (wildcard_import)) (import_from_statement module_name: (dotted_name (identifier) (identifier) (identifier)) (wildcard_import)) (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (if_statement condition: (boolean_operator left: (not_operator argument: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))) consequence: (block (return_statement (true)))) (comment) (comment) (return_statement (false)))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))))) (return_statement (true)))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (if_statement condition: (comparison_operator (subscript value: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)) subscript: (string (string_start) (string_content) (string_end))) (float)) consequence: (block (return_statement (call function: (identifier) arguments: (argument_list (identifier))))) alternative: (else_clause body: (block (return_statement (false))))))) (expression_statement (assignment left: (identifier) right: (list))) (function_definition name: (identifier) parameters: (parameters (identifier) (default_parameter name: (identifier) value: (float)) (default_parameter name: (identifier) value: (identifier))) body: (block (for_statement left: (identifier) right: (attribute object: (identifier) attribute: (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (comparison_operator (identifier) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (return_statement (true)))) (return_statement (false)))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (attribute object: (identifier) attribute: (identifier))) consequence: (block (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (none)) consequence: (block (expression_statement (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (identifier)))))) (return_statement (true)))) (return_statement (false)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (comment) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (comment) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (attribute object: (identifier) attribute: (identifier)) value: (integer)) (pair key: (attribute object: (identifier) attribute: (identifier)) value: (integer)) (pair key: (attribute object: (identifier) attribute: (identifier)) value: (integer)))) (comment) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (comment) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (integer)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (integer)))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (comment))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (assignment left: (subscript value: (attribute object: (identifier) attribute: (identifier)) subscript: (identifier)) right: (identifier))) (return_statement (false)))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)) (float))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)) (float))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (string (string_start) (string_content) (string_end)) (float))))))))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (list))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (comment) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (comment) (comment))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (dictionary (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (keyword_argument name: (identifier) value: (float)) (keyword_argument name: (identifier) value: (identifier)))))) (pair key: (string (string_start) (string_content) (string_end)) value: (lambda parameters: (lambda_parameters (identifier)) body: (call function: (identifier) arguments: (argument_list (identifier) (identifier))))))))))) (comment) (for_statement left: (identifier) right: (list (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (comment) (expression_statement (assignment left: (identifier) right: (list))) (expression_statement (call function: (identifier) arguments: (argument_list (integer) (integer) (call function: (attribute object: (string (string_start) (string_content) (string_end)) attribute: (identifier)) arguments: (argument_list (subscript value: (identifier) subscript: (string (string_start) (string_content) (string_end))))) (keyword_argument name: (identifier) value: (identifier)) (keyword_argument name: (identifier) value: (string (string_start) (string_content) (string_end))) (dictionary_splat (dictionary (dictionary_splat (identifier)) (dictionary_splat (identifier))))))))) (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (string (string_start) (string_content) (string_end))) (comment) (comment) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (identifier) (none)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (identifier)))) (return_statement (expression_list (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (integer) (float) (integer)))) (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (integer) (float) (integer)))))))) (return_statement (expression_list (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (integer) (float) (integer)))) (binary_operator left: (attribute object: (identifier) attribute: (identifier)) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list (integer) (float) (integer)))))))) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (expression_statement (string (string_start) (string_content) (string_end))) (import_from_statement module_name: (dotted_name (identifier) (identifier)) name: (dotted_name (identifier)) name: (dotted_name (identifier))) (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (string (string_start) (string_content) (string_end))) (expression_statement (call function: (identifier) arguments: (argument_list (string (string_start) (string_end))))) (expression_statement (string (string_start) (string_content) (string_end))))