(module (import_statement name: (aliased_import name: (dotted_name (identifier)) alias: (identifier))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (binary_operator left: (identifier) right: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (comparison_operator (identifier) (binary_operator left: (identifier) right: (integer)) (identifier))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (string (string_start) (string_content) (string_end))) (return_statement (comparison_operator (binary_operator left: (identifier) right: (integer)) (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (integer))) right: (integer)) right: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (identifier) arguments: (argument_list (identifier))))) (return_statement (comparison_operator (identifier) (list (integer) (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (binary_operator left: (binary_operator left: (parenthesized_expression (binary_operator left: (identifier) right: (integer))) right: (integer)) right: (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (boolean_operator left: (comparison_operator (call function: (identifier) arguments: (argument_list (identifier))) (integer)) right: (comparison_operator (binary_operator left: (identifier) right: (integer)) (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (call function: (identifier) arguments: (argument_list (identifier) (integer) (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (call function: (identifier) arguments: (argument_list (identifier) (integer) (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (comparison_operator (binary_operator left: (identifier) right: (integer)) (integer))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (return_statement (call function: (identifier) arguments: (argument_list (identifier) (integer) (integer)))))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (if_statement condition: (boolean_operator left: (not_operator argument: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))) right: (call function: (identifier) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))) consequence: (block (return_statement (true)))) (return_statement (false)))) (function_definition name: (identifier) parameters: (parameters (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (list))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier) (identifier)) body: (block (for_statement left: (identifier) right: (attribute object: (identifier) attribute: (identifier)) body: (block (expression_statement (assignment left: (identifier) right: (call function: (attribute object: (attribute object: (identifier) attribute: (identifier)) attribute: (identifier)) arguments: (argument_list)))) (if_statement condition: (comparison_operator (identifier) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list (attribute object: (identifier) attribute: (identifier))))))))))) (function_definition name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block (if_statement condition: (comparison_operator (attribute object: (identifier) attribute: (identifier)) (identifier)) consequence: (block (expression_statement (call function: (attribute object: (identifier) attribute: (identifier)) arguments: (argument_list))) (return_statement (true)))) (return_statement (false)))))